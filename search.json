[{"path":"/articles/pump_demo.html","id":"abstract","dir":"Articles","previous_headings":"","what":"Abstract","title":"Demonstration of the PUMP package","text":"randomized controlled trials (RCTs) single intervention measured multiple outcomes, researchers often apply multiple testing procedure (Bonferroni Benjamini-Hochberg) adjust pp-values. adjustment reduces likelihood spurious findings, also changes statistical power, sometimes substantially, reduces probability detecting effects exist. However, consideration frequently ignored typical power analyses, existing tools easily accommodate use multiple testing procedures. introduce PUMP R package tool analysts estimate statistical power, minimum detectable effect size, sample size requirements multi-level RCTs multiple outcomes. Multiple outcomes accounted two ways. First, power estimates PUMP properly account adjustment pp-values applying multiple testing procedure. Second, researchers change focus one outcome multiple outcomes, different definitions statistical power emerge. PUMP allows researchers consider variety definitions power, may appropriate goals study. package estimates power frequentist multi-level mixed effects models, supports variety commonly-used RCT designs models multiple testing procedures. addition main functionality estimating power, minimum detectable effect size, sample size requirements, package allows user easily explore sensitivity quantities changes underlying assumptions.","code":""},{"path":"/articles/pump_demo.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Demonstration of the PUMP package","text":"PUMP R package fills important gap open-source software tools design multi-level randomized controlled trials (RCTs) adequate statistical power. package, researchers can estimate statistical power, minimum detectable effect size (MDES), needed sample size multi-level experimental designs, units nested within hierarchical structures students nested within schools nested within school districts. statistical power calculated estimating impact single intervention multiple outcomes. package uses frequentist framework mixed effects regression models, currently prevailing framework estimating impacts experiments education social policy research.1 knowledge, none existing software tools power calculations allow researchers account multiple hypothesis tests use multiple testing procedure (MTP). MTPs adjust pp-values reduce likelihood spurious findings researchers testing effects multiple outcomes. adjustment can result substantial change statistical power, greatly reducing probability detecting effects exist. Unfortunately, designing studies, researchers plan test effects multiple outcomes employ MTPs frequently ignore power implications MTPs. Also, researchers change focus one outcome multiple outcomes, multiple definitions statistical power emerge (Chen et al. (2011); Dudoit, Shaffer, Boldrick (2003); Senn Bretz (2007); Westfall, Tobias, Wolfinger (2011)). PUMP package allows researchers consider multiple definitions power, selecting suited goals study. definitions power include: individual power: probability detecting effect particular size (specified researcher) larger hypothesis test. Individual power corresponds power defined focus single outcome. 1−1-minimal power: probability detecting effects least particular size least one outcome. Similarly, researcher can consider d−d-minimal power dd less number outcomes, fractional powers, 1/2−1/2-minimal power. complete power: power detect effects least particular size outcomes. noted Porter (2018), prevailing default many studies–-individual power–-may may appropriate type power. researcher’s goal find statistically significant estimates effects primary outcomes interest, power may much lower anticipated multiplicity adjustments taken account. hand, researcher’s goal find statistically significant estimates effects least one small proportion outcomes, power may much better anticipated. cases, accounting challenges opportunities arising multiple outcomes, researcher may find wasted resources, either designing underpowered study detect desired effect sizes, designing overpowered study larger sample size necessary. introduce PUMP package allow directly answering questions take multiple outcomes account, : many schools need detect given effect least three five outcomes? size effect can reliably detect outcome, given planned MTP across outcomes? power detect given effect change half outcomes truly impact? methods PUMP package build introduced Porter (2018). earlier paper focused single RCT design model — multisite RCT blocked randomization individuals, effects estimated using model block-specific intercepts assumption constant effects across units. earlier paper also produce software assist researchers implementing methods. current paper introduction PUMP package, extend methodology nine additional multi-level RCT designs models. Also, Porter (2018) focused estimates power, PUMP goes also estimate MDES sample size requirements take multiplicity adjustments account. PUMP extends functionality popular PowerUp! R package (related tools form spreadsheet Shiny application), compute power MDES multi-level RCTs single outcome (Dong Maynard (2013)). wide variety RCT designs single outcome, researchers can take advantage closed-form solutions numerous power estimation tools. example, education social policy research, see Dong Maynard (2013); Hedges Rhoads (2010); Raudenbush et al. (2011). However, closed-form solutions difficult impossible derive MTP applied setting multiple outcomes. Instead, use simulation-based approach achieve estimates power. order calculate power, researcher specifies information sample size level, minimum detectable effect size outcome, level statistical significance, parameters data generating distribution. minimum detectable effect size smallest true effect size study can detect desired statistical significance level, units standard deviations. “effect size” generally refers standardized mean difference effect size, “equals difference mean outcomes treatment group control group, divided standard deviation outcomes across subjects within experimental groups” (Bloom (2006)). Researchers often use effect sizes standardize outcomes outcomes different scales can directly compared. package includes three core functions: pump_power() calculating power given experimental design assumed model, parameters, minimum detectable effect size. pump_mdes() calculating minimum detectable effect size given target power sample sizes. pump_sample() calculating required sample size achieving given target power given minimum detectable effect size. core functions, user begins two main choices. First, user chooses assumed design model RCT. PUMP package covers range multi-level designs, three levels hierarchy, researchers typically use practice, research units nested hierarchical groups. power calculations assume user analyzing RCTs using frequentist mixed-effects regression models, containing combination fixed random intercepts treatment impacts different levels. explain details accompanying paper, Section 4 Technical Appendix. Second, user chooses MTP applied. PUMP supports five common MTPs — Bonferroni, Holm, single-step step-versions Westfall-Young, Benjamini-Hochberg. two main choices, user must also make variety decisions parameters data generating distribution. package also includes functions allow users easily explore power range possible values parameters. exploration encourages user determine sensitivity estimates different assumptions. PUMP also visually displays results. additional functions include: pump_power_grid(), pump_mdes_grid(), pump_sample_grid() calculating given output range possible parameter values. update() re-run existing calculation small number parameters updated. plot() PUMP-generated objects generate plots (including grid outputs). authors PUMP package also created web application built R Shiny. web application calls PUMP package allows users conduct calculations user-friendly interface, less flexible package, focus simpler scenarios (e.g., 10 fewer outcomes). app can found .","code":""},{"path":"/articles/pump_demo.html","id":"case-study-diplomas-now","dir":"Articles","previous_headings":"","what":"Case study: Diplomas Now","title":"Demonstration of the PUMP package","text":"illustrate package using example published RCT evaluated secondary school model called Diplomas Now. Diplomas Now model designed increase high school graduation rates post-secondary readiness. Evaluators conducted RCT comparing schools implemented model business--usual. refer example throughout paper illustrate key concepts illustrate application PUMP package. Diplomas Now model, created three national organizations, Talent Development, City Year, Communities Schools, targets underfunded urban middle high schools many students performing well academically. model designed robust enough transform high-poverty high-needs middle high schools attended many students fall path high school graduation. Diplomas Now, MDRC partner, one first validation grants awarded part Investing Innovation (i3) competition administered federal Department Education. follow general design Diplomas Now evaluation, conducted MDRC. RCT contains three levels (students within schools within districts) random assignment level two (schools). initial evaluation, included two cohorts schools cohort implementing two years (2011-2013 Cohort 1 2012-2014 Cohort 2). cohorts included 62 secondary schools (middle high schools) 11 school districts agreed participate. Schools active treatment group assigned implement Diplomas Now model, schools control group continued existing school programs implemented reform strategies choosing (Corrin et al. (2016).) MDRC researchers conducted randomization schools within blocks defined district, school type, year roll-. schools dropped study due structural reasons, researchers left 29 high schools 29 middle schools grouped 21 random assignment blocks. Within block, schools randomized active treatment business--usual, resulting 32 schools treatment group, 30 schools control group. evaluation focused three categories outcomes: Attendance, Behavior, Course performance, called “ABC’s”, multiple measures category. addition, evaluation measured overall ABC composite measures whether student given thresholds three categories. grouping constitutes 12 total outcomes interest. Evaluating 12 outcomes independently good practice, chance spurious finding well controlled. authors MDRC report pre-identified three outcomes primary outcomes start study order reduce problem multiple testing. , contrast, use example illustrate done uncertainty outcomes primary. particular, illustrate conduct power analysis plan study one uses multiple testing adjustment, rather predesignation, account multiple outcome problem. different guidelines adjust groupings multiple outcomes education studies. example, Schochet (2008) recommends organizing primary outcomes domains, conducting tests composite domain outcomes, applying multiplicity corrections composites across domains. Works Clearinghouse applies multiplicity corrections findings within domain rather across different domains. provide recommendations guidelines follow investigating impacts multiple outcomes. Rather, address fact researchers across many domains increasingly applying MTPs therefore need correctly estimate power, MDES sample size requirements accounting choice. example, elect power analysis separately three outcome groups ABC outcomes control family-wise error rather overall error. strategy means adjust number outcomes within group independently. illustration purposes, focus one outcome group, attendance, assume contains five separate outcomes.","code":""},{"path":[]},{"path":"/articles/pump_demo.html","id":"designs-and-models","dir":"Articles","previous_headings":"User choices","what":"Designs and models","title":"Demonstration of the PUMP package","text":"planning study, researcher first identify design experiment, including number levels, level randomization occurs. decisions can mix realities context (e.g., treatment must applied school level, students naturally nested schools, making cluster randomization), deliberate (e.g., researcher groups similar schools block experiment attempt improve power). Second, based design inferential goals study, researchers chooses assumed model, including whether intercepts treatment effects treated constant, fixed, random. experimental design, analyst can sometimes choose variety possible models, two decisions kept conceptually separated . design. PUMP package supports designs one, two, three levels, randomization occurring level. example, design two levels randomization level one blocked design (equivalently multisite experiment), level two forms blocks (blocks groups units, treated ). Ideally, blocks trial groups relatively homogenous units, frequently consequence units studied (e.g., evaluations college supports, students, units, nested colleges, blocks). design two levels randomization level two commonly called cluster design (e.g., collection schools, treatment applied subset schools, outcomes student level); schools clusters, cluster collection units entirely treated entirely . can also blocking clustering: randomizing schools within districts, creating series cluster-randomized experiments, blocked (district), cluster-randomized experiment, randomization level two. model. Given design, researcher can select model via modeling choices. particular researcher decide, level beyond first, intercepts treatment impacts: fixed: separate intercept unit. random: separate intercept unit , model collection intercepts Normally distributed, allowing partial pooling. constant: model units within group single average impact. fixed: allow block cluster within level individual estimated impact (can treated control units within said block cluster). random: allow variation fixed, model collection treatment impacts Normally distributed around grand mean mean impact. implicitly allowing sample representative larger super-population, terms treatment impact estimation. denote research design dd, followed number levels randomization level, d3.1 three level design randomization level one. model denoted mm, followed level assumption intercepts, either ff rr assumption treatment impacts, cc, ff, rr. example, m3ff2rc means level 33, assume fixed intercepts fixed treatment impacts, level two assume random intercepts constant treatment impacts. full design model specified concatenating together, e.g. d2.1_m3fc. Diplomas Now model, example, d3.2_m3fc2rc. full list supported design model combinations . user can see list calling pump_info(), provides designs models, MTPs, power definitions, model parameters. also include corresponding names PowerUP! package appropriate. details combination design model, see Technical Appendix.","code":""},{"path":"/articles/pump_demo.html","id":"multiple-testing-procedures","dir":"Articles","previous_headings":"User choices","what":"Multiple testing procedures","title":"Demonstration of the PUMP package","text":"provide review multiple testing procedures supported PUMP package: Bonferroni: adjusts pp-values multiplying MM ensure strong control FWER. Bonferroni simple procedure, conservative. Holm: step-version Bonferroni. Starting smallest largest, pp-values sequentially adjusted different multipliers. Holm less conservative Bonferroni larger pp-values. Benjamini-Hochberg: sequential, step-procedure controls FDR. Using BH method, null hypotheses pp-values certain threshold rejected, threshold determined number tests level α\\alpha. Single-step Westfall-Young: permutation-based procedure controlling FWER, directly takes account joint correlation structure outcomes. single-step approach, outcomes adjusted using permuted distribution minimum pp-value. Although Westfall-Young procedures less conservative still protecting false discoveries, computationally intensive. Step-Westfall-Young: similar approach single-step procedure, except outcomes adjusted sequentially smallest largest according permuted distributions corresponding sequential pp-values. detailed explanation MTP, see Appendix Porter (2018). following table Porter (2018) summarizes important features MTPs supported PUMP.","code":""},{"path":"/articles/pump_demo.html","id":"model-parameters","dir":"Articles","previous_headings":"User choices","what":"Model parameters","title":"Demonstration of the PUMP package","text":"table shows parameters influence QmQ_m, standard error, different designs models. parameters warrant explanation. quantity ICC\\text{ICC} unconditional Intraclass Correlation, gives measure variation different levels model. outcome, ICC level defined ratio variance level divided overall variance individual outcomes. ICC includes variation due covariates. outcome, quantity omega (ω\\omega) level ratio impact variation level variation intercepts (including covariates) level. measure treatment impact heterogeneity. R2R^2 expressions percent variation particular level predicted covariates specific level. simplicity assume covariates level group mean centered, covariates particular level explain variance level. precise formulae expressions, see Technical Appendix, outlines assumed data-generating process, resulting expressions ICC\\text{ICC}, ω\\omega, R2R^2. addition design parameters, additional parameters control precision power estimates : tnum number test statistics generated order estimate power. larger number test statistics results greater computation time, also precise estimate power. Note pump_mdes() pump_sample() multiple tnum parameters controlling precision search. B number Westfall-Young permutations. , tradeoff precision computation time. parallel.WY.cores specifies number cores use parallel computation Westfall-Young Step-procedure, computationally intensive. default 1 result parallel computation. Parallelization done using parApply parallel package.","code":""},{"path":"/articles/pump_demo.html","id":"package-illustration","dir":"Articles","previous_headings":"","what":"Package illustration","title":"Demonstration of the PUMP package","text":"section, illustrate use PUMP package, using example motivated Diplomas Now study. Given study’s design, ask natural initial question: size impact reasonably detect using MTP adjust pp-values account multiple outcomes? mimic planning process one might use planning study similar Diplomas Now (e.g., planning replication trial slightly different context). answer question therefore first decide experimental design modeling approach. also determine values associated design parameters accompany choices. following sections walk selecting parameters (sample size, control variables, intraclass correlation coefficients, impact variation, correlation outcomes). calculate MDES resulting context determine necessary sample sizes change depending kind power desire. finally illustrate sensitivity checks, looking MDES changes function rho, correlation test statistics.","code":""},{"path":"/articles/pump_demo.html","id":"establishing-needed-design-parameters","dir":"Articles","previous_headings":"Package illustration","what":"Establishing needed design parameters","title":"Demonstration of the PUMP package","text":"conduct power, MDES, sample size calculations, first specify design, sample sizes, analytic model, level statistical significance. also must specify parameters data generating distribution match selected design model. numbers determined given resource limitations, estimated using prior knowledge, pilot studies, sources information. next discuss selection needed design parameters modeling choices. discussion selecting parameters see, example Bloom (2006) Dong Maynard (2013). discussion multiple testing context, especially regards overall power measures 1−1-minimal complete power, see Porter (2018); findings general, function final distribution test statistics. key insight power function summarizing elements: individual-level standard errors, degrees freedom, correlation structure test statistics. elements, regardless design, can proceed. Analytic model. first need specify analyze data; choice also determines design parameters need specify. Following original Diplomas Now report, plan using multi-level model fixed effects level three, random intercept level two, single treatment coefficient. represent model “m3fc2rc.” “3fc” means including block fixed effects, modeling treatment impact variation level three. “2rc” means random intercept modeled variation treatment within block (“c” “constant”). note Diplomas Now report authors call model “two-level” model, quite aligned language package. particular, fixed effects included level two actually accounting variation level three; therefore identify model three level model fixed effects level three. Sample sizes. assume equal size randomization blocks schools, typical power analysis packages. context, gives three schools per randomization block; can later sensitivity check increase decrease see power changes. Diplomas Now report states 14,950 students, yielding around 258 students per school. Normally use geometric means schools per randomization block students per school design parameters, information available report. assume 50% schools treated; calculations approximate actually treat exactly 50% small odd-sized blocks. Control variables. next need values R2R^2 possible covariates. report provide quantities, mention covariate adjustment presentation model. Given types outcomes working , unlikely highly predictive individual-level covariates, prior year school-average attendance measures likely highly predictive corresponding school-average outcomes. thus set R12=0.1R^2_1 = 0.1 R22=0.5R^2_2 = 0.5. assume five covariates level one three level two; decision, especially level one, usually matter much practice, unless sample sizes small (number covariates along sample size determine degrees freedom planned tests). ICCs. also need measure variation occurs: individual, school, randomization block level. capture Intraclass Correlation Coefficients (ICCs), one level two one level three. ICC measures specify overall variation outcome across levels: e.g., see relatively homogeneous students within schools quite different, schools generally substantial variation within ? typically obtain ICCs pilot data external reports similar data. specify level-two ICC 0.05, level-three ICC 0.40. set relatively high level three ICC expect school type district blocks isolate variation; particular might believe middle high school attendance rates markedly different. Correlation outcomes. finally need specify number relationship among outcomes associated test-statistics. illustration, select attendance outcome group. assume five different attendance measures. main decision regarding outcomes correlation test statistics. rough proxy, use correlation outcomes level randomization; case correlation school-average attendance within block. believe attendance measures fairly related, select rho = 0.40 pairs outcomes. value estimate, strongly encourage exploration different values correlation choice sensitivity check conducted analysis. Selecting candidate rho difficult, new familiar power analyses single outcomes; need research field, empirical theoretical, guide choice. information available, specify different values design parameters R2R^2s ICCICCs outcome, thought different characteristics; simplicity . PUMP package also allows specifying different pairwise correlations test statistics different outcomes via matrix ρ\\rhos rather single ρ\\rho; also simplicity, . established initial values needed parameters, first conduct baseline calculation, explore MDES quantities change parameters change.","code":""},{"path":"/articles/pump_demo.html","id":"calculating-mdes","dir":"Articles","previous_headings":"Package illustration","what":"Calculating MDES","title":"Demonstration of the PUMP package","text":"now initial planned design, set number schools students. large enough experiment reliably detect reasonably sized effects? answer question calculate minimal detectable effect size (MDES), given planned analytic strategy, outcomes. identify MDES given setting use pump_mdes method, conducts search MDES achieves target level power. MDES depends design model parameters discussed , also depends type power target level power interested . example, determine size effect can reliably detect first outcome, multiplicity adjustment. , determine size effects need across five outcomes reliably detect impact least one . set goal specifying type (power.definition) desired power (target.power). , example, find MDES want 80% chance detecting impact first outcome using Holm procedure: results easily made nice table via knitr kable() command: answers pump_mdes() gives approximate calculating via monte carlo simulation. control accuracy, can specify tolerance (tol) close estimated power needs desired target along number iterations search sequence (via start.tnum, tnum, final.tnum). search stop estimated power within tol target.power, estimated final.tnum iterations. Lower tolerance higher tnum values give exact results (take computational time). Changing type power straightforward: example, identify MDES 1−1-minimal power (.e., effect assume across observations find least one significant result 80% power?), simply update result new power definition: update() method can replace number arguments prior call new ones, making exploration different scenarios straightforward.2 results show just want detect least one outcome 80% power, can reliably detect effect size 0.080.08 (assuming five outcomes effects least size). estimating power multiple outcomes, important consider cases outcomes fact null, small, effects, hedge circumstances one outcomes well measured. One way set two outcomes effect numZero parameter: MDES goes , expected: effects outcomes, fewer good chances detecting effect. Therefore, increased MDES (nonzero outcomes) required achieve level desired power (80%). provide deeper dive extent numZero can effect power estimates.","code":"m <- pump_mdes(   d_m = \"d3.2_m3fc2rc\",         # choice of design and analysis strategy   MTP = \"HO\",                   # multiple testing procedure   target.power = 0.80,          # desired power   power.definition = \"D1indiv\", # power type   M = 5,                        # number of outcomes   J = 3,                        # number of schools per block   K = 21,                       # number districts   nbar = 258,                   # average number of students per school   Tbar = 0.50,                  # prop treated   alpha = 0.05,                 # significance level   numCovar.1 = 5,               # number of covariates at level 1   numCovar.2 = 3,               # number of covariates at level 2   R2.1 = 0.1, R2.2 = 0.7,       # explanatory power of covariates for each level   ICC.2 = 0.05, ICC.3 = 0.4,    # intraclass correlation coefficients   rho = 0.4 )                   # how correlated outcomes are knitr::kable( m, digits = 3 ) %>%   kableExtra::kable_styling( position = \"center\" ) m2 <- update( m, power.definition = \"min1\" ) #> mdes result: d3.2_m3fc2rc d_m with 5 outcomes #>   target min1 power: 0.80 #>  MTP Adjusted.MDES min1.power   SE #>   HO    0.08048574    0.78425 0.01 #>  (5 steps in search) m3 <- update( m2, numZero = 2 ) #> mdes result: d3.2_m3fc2rc d_m with 5 outcomes #>   target min1 power: 0.80 #>  MTP Adjusted.MDES min1.power   SE #>   HO    0.08970923    0.79125 0.01 #>  (13 steps in search)"},{"path":"/articles/pump_demo.html","id":"determining-necessary-sample-size","dir":"Articles","previous_headings":"Package illustration","what":"Determining necessary sample size","title":"Demonstration of the PUMP package","text":"MDES calculator tells us can detect given specific design. might instead want ask much larger design need order achieve desired MDES. particular, might want determine needed number students per school, number schools, number blocks detect effect given size. pump_sample method search one . Assuming three schools per block, first calculate many blocks need achieve MDES 0.10 1−1-minimal power (answers question big experiment need order 80% chance finding least one outcome significant, outcomes true effect size 0.10): need 15 blocks, rather originally specified 21, giving 45 total schools study, achieve 80% 1−1-minimal power. recommend checking MDES sample-size calculators, estimation error combined stochastic search can give results bit target cases. check easy ; simply run found design pump_power(), directly calculates power given scenario, see recover originally targeted power (can use update() set type power pass design parameters automatically). , can also increase number iterations get precise estimates power, well: calculating power directly, get power implemented definitions power applicable design. , first five rows powers rejecting five outcomes—(simulation error) since assuming MDES design parameters . “mean individual” mean individual power across outcomes. first column power without adjustment, second power listed pp-value adjustment. next rows show different multi-outcome definitions power. particular, 1-minimum shows chance rejecting least one hypotheses. complete row shows power reject hypotheses; defined outcomes specified non-zero effect.3 can look power curve pump_sample() call assess sensitive power level two sample size:4  Though increasing tnum useful checking power calculation, also increases computation time. Thus, future calculations save call default tnum reduce computation time. Remark. certain settings, wide range sample sizes may result similar levels power. case, algorithm may return sample size larger necessary. pattern occur sample size highest level hierarchy, occurs sample sizes lower levels hierarchy; e.g. nbar models, nbar J three level models. addition, due nature search algorithm, occasionally algorithm may converge. detailed discussion challenges, see package sample size vignette.","code":"smp <- pump_sample(   d_m = \"d3.2_m3fc2rc\",   MTP = \"HO\",   typesample = \"K\",   target.power = 0.80, power.definition = \"min1\", tol = 0.01,   MDES = 0.10, M = 5, nbar = 258, J = 3,   Tbar = 0.50, alpha = 0.05, numCovar.1 = 5, numCovar.2 = 3,   R2.1 = 0.1, R2.2 = 0.7, ICC.2 = 0.05, ICC.3 = 0.40, rho = 0.4 )  print( smp ) #> sample result: d3.2_m3fc2rc d_m with 5 outcomes #>   target min1 power: 0.80 #>  MTP Sample.type Sample.size min1.power   SE #>   HO           K          16      0.797 0.01 #>  (18 steps in search) p_check <- update( smp, type = \"power\", tnum = 20000,                    long.table = TRUE ) plot( smp ) pow <- update( p_check, tnum = 10000 )"},{"path":"/articles/pump_demo.html","id":"comparing-adjustment-procedures","dir":"Articles","previous_headings":"Package illustration","what":"Comparing adjustment procedures","title":"Demonstration of the PUMP package","text":"easy rerun using Westfall-Young Stepdown procedure (procedure much computationally intensive run), procedures interest. Alternatively, simply provide list procedures wish compare. provide list, package re-run power calculator item list; can make overall call computationally intensive. obtain power scenario using Bonferroni, Holm Westfall-Young adjustments, plot results using default plot() method:  speed computation, add parallel.WY.cores = 2 (however many cores wish allocate) call parallelize computation. also reduce tnum decrease computation time. sophisticated (less conservative) adjustment exploits correlation outcomes (rho = 0.4) provide higher individual power. Note, however, see elevated rates 1−1-minimal power. Accounting correlation test statistics adjusting pp-values can drive power (individual power) , flip side 1−1-power can driven lack independence tests gives fewer chances significant result. See Porter (2018) discussion; paper focuses multisite randomized trial context, lessons learned apply designs substantive differences different design modeling choices calculate unadjusted distribution test statistics.","code":"p2 <- update( pow,               MTP = c( \"BF\", \"HO\", \"WY-SD\" ) ) plot( p2 )"},{"path":"/articles/pump_demo.html","id":"exploring-sensitivity-to-design-parameters","dir":"Articles","previous_headings":"Package illustration","what":"Exploring sensitivity to design parameters","title":"Demonstration of the PUMP package","text":"Within pump package two general ways exploring design sensitivity. first update(), allows quickly generating single alternate scenario. explore sensitivity different design parameters systematically, use grid() functions, calculate power, mdes, sample size combinations set passed parameter values. two main differences two approaches. First, update() allows different values parameter different outcomes; grid approach, contrast, limited regard, assumes parameter value across different outcomes. Second, grid functions powerful tool systematically exploring many possible combinations, update() allows user explore one value time. first illustrate update() approach, turn illustrating grid() across three common areas exploration: Intraclass Correlation Coefficients (ICCs), correlation test statistics, assumed number non-zero effects. last two particularly important multiple outcome contexts.","code":""},{"path":"/articles/pump_demo.html","id":"exploring-power-with-update","dir":"Articles","previous_headings":"Package illustration > Exploring sensitivity to design parameters","what":"Exploring power with update()","title":"Demonstration of the PUMP package","text":"Update allows quick change set parameters used prior call; saw update() used several times . example, examine happens ICCs equally split across levels two three: immediately see assumption substantial variation level three matters great deal power. calculating power given scenario, also easy vary many design parameters outcome. example, thought better predictive covariates second outcome, might try: Notice individual powers heavily impacted. dd-minimal powers naturally take varying outcomes account calculating joint distribution test statistics correct marginal distributions based different design parameter values. several update()s, may lose track ; find , can always check details print_context() summary(): Using update allows targeted comparison major choices, interested power changes across range options, can systematically grid() functions, next.","code":"p_b <- update( pow, ICC.2 = 0.20, ICC.3 = 0.25 ) print( p_b ) #> power result: d3.2_m3fc2rc d_m with 5 outcomes #>   MTP    D1indiv    D2indiv    D3indiv    D4indiv    D5indiv indiv.mean  min1 #>  None      0.261      0.257      0.268      0.262      0.263      0.262       #>    SE ( 0.072 )  ( 0.072 )  ( 0.072 )  ( 0.072 )  ( 0.072 )                   #>    HO      0.108      0.109      0.110      0.110      0.112      0.110 0.294 #>   min2  min3  min4 complete df1 #>                              29 #>                                 #>  0.133 0.067 0.037    0.028     #>  0.000 <= MCSE <= 0.002 p_d <- update( pow,                R2.1 = c( 0.1, 0.3, 0.1, 0.2, 0.2 ),                R2.2 = c( 0.4, 0.8, 0.3, 0.2, 0.2 ) ) print( p_d ) #> power result: d3.2_m3fc2rc d_m with 5 outcomes #>   MTP    D1indiv    D2indiv    D3indiv    D4indiv    D5indiv indiv.mean  min1 #>  None      0.460      0.880      0.411      0.365      0.368      0.497       #>    SE ( 0.052 )  ( 0.031 )  ( 0.055 )  ( 0.059 )  ( 0.059 )                   #>    HO      0.269      0.701      0.237      0.207      0.207      0.324 0.754 #>   min2  min3  min4 complete df1 #>                              29 #>                                 #>  0.413 0.238 0.138    0.100     #>  0.001 <= MCSE <= 0.002 summary( p_d ) #> power result: d3.2_m3fc2rc d_m with 5 outcomes #>  #>   MDES vector: 0.1, 0.1, 0.1, 0.1, 0.1 #>   nbar: 258  J: 3    K: 16   Tbar: 0.5 #>   alpha: 0.05     #>   Level: #>     1: R2: 0.1 / 0.3 / 0.1 / 0.2 / 0.2 (5 covariates) #>     2: R2: 0.4 / 0.8 / 0.3 / 0.2 / 0.2 (3 covariates)    ICC: 0.05   omega: 0 #>     3:   fixed effects   ICC: 0.4    omega: 0 #>   rho = 0.4 #>   MTP    D1indiv    D2indiv    D3indiv    D4indiv    D5indiv indiv.mean  min1 #>  None      0.460      0.880      0.411      0.365      0.368      0.497       #>    SE ( 0.052 )  ( 0.031 )  ( 0.055 )  ( 0.059 )  ( 0.059 )                   #>    HO      0.269      0.701      0.237      0.207      0.207      0.324 0.754 #>   min2  min3  min4 complete df1 #>                              29 #>                                 #>  0.413 0.238 0.138    0.100     #>  0.001 <= MCSE <= 0.002 #>  (tnum = 10000)"},{"path":"/articles/pump_demo.html","id":"exploring-the-impact-of-the-icc","dir":"Articles","previous_headings":"Package illustration > Exploring sensitivity to design parameters","what":"Exploring the impact of the ICC","title":"Demonstration of the PUMP package","text":"saw ICC impact power considerably. next extend evaluation exploring range options level two three ICCs, can assess whether power sufficient across set plausible values. update_grid() call makes straightforward: pass baseline scenario along lists parameters additionally explore. decrease computation time achieve less precise estimates exploratory phase, decrease tnum. can easily visualize variation min1 power calling plot() object.  plots show impact one varying factor averaged factors, like get plot main effect fully interacted experiment. Note addition update_grid(), also base functions pump_power_grid(), pump_mdes_grid(), pump_sample_grid(). see higher ICC.2 radically reduces power detect anything ICC.3 little. understand , turn standard error formula design model: SE(τ̂)=ICC2(1−R22)T‾(1−T‾)JK+(1−ICC2−ICC3)(1−R12)T‾(1−T‾)JKn‾. \\begin{aligned} SE( \\hat{\\tau} ) = \\sqrt{ \\frac{\\text{ICC}_{2}(1 - R^2_{2})}{\\bar{T}(1 - \\bar{T}) JK} + \\frac{(1-\\text{ICC}_{2} - \\text{ICC}_{3})(1-R^2_{1})}{\\bar{T}(1 - \\bar{T}) J K\\bar{n}} } . \\end{aligned}  , n‾=258\\bar{n} = 258 students per group makes second term small compared first, regardless ICC.3 value. first term, however, direct scaling ICC.2; changing change standard error, therefore power, lot. provided designs models implemented package discussed, along corresponding formula , technical supplement accompanying paper package. grid searches recommend reducing number permutations, via tnum, speed computation. tnum shrinks, get increasingly rough estimates power, even rough estimates can help us determine trends. grid() functions provide easy direct ways exploring power changes function design parameters. note, however, order keep syntax simple, allow different design parameters, including MDES, outcome. keep package syntax simpler. faced contexts believed parameters vary, recommend using average values broader searches, double-checking small set potential final designs pump_power() method.","code":"grid <- update_grid( pow,             ICC.2 = seq( 0, 0.3, 0.05 ),             ICC.3 = seq( 0, 0.60, 0.20 ) )  plot( grid, power.definition = \"min1\" )"},{"path":"/articles/pump_demo.html","id":"exploring-the-impact-of-rho","dir":"Articles","previous_headings":"Package illustration > Exploring sensitivity to design parameters","what":"Exploring the impact of rho","title":"Demonstration of the PUMP package","text":"correlation test statistics, ρ\\rho, critical parameter power play across multiple tests. example, Westfall-Young, saw correlation can improve individual power, compared Bonferroni. might know happen 2−2-minimal power, however: one hand, correlated statistics make individual adjustment less severe, correlation means succeed fail together. can explore question relatively easily letting rho vary : plot results.  First, see benefit Westfall-Young single-step procedure minimal, compared Bonferroni. Second, impact individual adjustment flat, anticipated. Third, across broad range rho, maintain good 1−1-minimal power. Complete power climbs correlation increases, 2−2-minimal power generally unchanged.","code":"gridRho <- update_grid( pow,               MTP = c( \"BF\", \"WY-SD\" ),               rho = seq( 0, 0.9, by = 0.15 ),               tnum = 1000,               B = 3000 ) plot( gridRho )"},{"path":"/articles/pump_demo.html","id":"exploring-the-impact-of-null-outcomes","dir":"Articles","previous_headings":"Package illustration > Exploring sensitivity to design parameters","what":"Exploring the impact of null outcomes","title":"Demonstration of the PUMP package","text":"finally explore varying number outcomes effects. exploration important way hedge design possibility number identified outcomes measured poorly, simply impacted treatment. use grid search, varying number outcomes treatment impact via numZero design parameter:  ways exploring impact weak null effects outcomes. particular, pump_power() pump_sample() methods allow researcher provide MDES vector different values outcome, including 0s outcomes. grid() functions, contrast, take single MDES value non-null outcomes, separate specification many outcomes 0. (single value plus numZero parameter also works pump_power() desired.)","code":"gridZero <- update_grid( pow,                          numZero = 0:4,                          M = 5 ) plot( gridZero, nrow = 1 )"},{"path":"/articles/pump_demo.html","id":"methods-for-pump-objects","dir":"Articles","previous_headings":"Package illustration > Exploring sensitivity to design parameters","what":"Methods for PUMP objects","title":"Demonstration of the PUMP package","text":"user reference, wrap brief summary methods can applied PUMP-generated objects. PUMP package returns two types S3 objects. pumpresult objects returned single scenario calls: pump_power(), pump_mdes(), pump_sample(), calls update(). pumpgridresult objects returned grid calls: pump_power_grid(), pump_mdes_grid(), pump_sample_grid(), calls update_grid(). package variety methods can called directly pumpresult objects. print() displays concise summary relevant inputs results call. summary() prints extensive output, containing full summary full list inputs results call. print_context() provides summary user inputs, including design model parameter values. power objects, displays power across power definitions MTPs. MDES sample size objects, default displays power curve showing power changes sample size MDES changes. MDES sample size objects, user can instead request diagnostic plot power search algorithm using type = \"search\". power_curve() returns data frame power values range MDES sample size values. search_path() returns search history search algorithm MDES sample size calls. transpose_power_table() converts power table wide long formats. .data.frame() casts object data frame results. gen_sim_data() generates set simulated data using data-generating process assumed design, model, parameters. details functions simulate data, see package vignette simulating data. check_cor() checks correlation test statistics using simulation approach. Many methods also apply pumpgridresult objects, although relevant grid objects. main difference behavior pumpresult pumpgridresult objects output plot() function. example plot() called pumpresult object, see Figure . contrast, example plot() called grid object, see Figure . grid objects, plot() function plots facet wrap displaying power changes across MTPs, power definitions, varying parameters provided grid call. user wants smaller set results, can specify single power.definition, use var.vary plot variation one parameter value. grid call varied multiple parameters, plot averages power across factors plot main effects. example, ICC grid figure “Exploring impact ICC”, first plot averages values ICC.3 show power varies just ICC.2, second plot opposite.","code":""},{"path":[]},{"path":"/articles/pump_sample_demo.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Demo and discussion of the pump_sample method","text":"main PUMP vignette covers main functions package. vignette focuses one specific function: pump_sample(), calculates required sample sizes various levels RCT design. function requires extra explanation unique interpretation behavior. First, vignette discusses user interpret output call pump_sample(). Second, vignette discusses challenges user might face using function.","code":""},{"path":"/articles/pump_sample_demo.html","id":"intepreting-sample-size-calculations","dir":"Articles","previous_headings":"","what":"Intepreting sample size calculations","title":"Demo and discussion of the pump_sample method","text":"Let’s start case calculating sample size 3-level model. demonstrate challenges calculating sample size, start calculating power given set parameters, try recover parameters. individual power using Holm procedure estimated 0.418. First, let’s try recover original parameter KK, number districts, given power just found. recover similar value K = , exact value original parameter. small discrepancy original parameter unsurprising given two features package. First, PUMP power calculations rely simulations, returned values estimates uncertainty. randomness inherent simulations means repeating power calculation set parameters might result slightly different power estimates. example, two sources uncertainty: uncertainty actual power (first call), uncertainty power calculations pump_sample(). Second, search algorithm finds sample size within certain tolerance target power, give take estimation uncertainty. default tolerance 0.010.01, meaning algorithm return value KK estimated power within 1% target power. two facts highlight output interpreted: pump_sample finds one possible sample size result power within given tolerance target power, give take estimation error. computational efficiency, pump_sample also usually run fewer simulation iterations, meaning estimates bit noisy. therefore advise checking pump_sample’s work: given initial sample size value, worth plugging back pump_power high degree precision (increasing tnum, number test statistics draws) verify intended power. One easy way verify power use update() function. feed sample size object specify now want run power calculation, can also provide parameters like update. , override default tnumtnum pump_power() increase precision. also find values KK, including smaller values, result similar power, user explore different possible values near output get better sense variation power. idea explored next section.","code":"p <- pump_power(     d_m = \"d3.1_m3rr2rr\",     MTP = \"HO\",     nbar = 50,     K = 15,     J = 20,     M = 3,     MDES = rep(0.125, 3),     Tbar = 0.5, alpha = 0.05,     numCovar.1 = 1, numCovar.2 = 1,     R2.1 = 0.1, R2.2 = 0.1,     ICC.2 = 0.2, ICC.3 = 0.2,     omega.2 = 0.2, omega.3 = 0.2,     rho = 0.5, tnum = 100000 ) K <- pump_sample(   d_m = \"d3.1_m3rr2rr\",   typesample = \"K\",   MTP = \"HO\",   target.power = target_power,   power.definition = \"D1indiv\",   J = 20,   nbar = 50,   M = 3,   MDES = 0.125,   Tbar = 0.5, alpha = 0.05,   numCovar.1 = 1, numCovar.2 = 1,   R2.1 = 0.1, R2.2 = 0.1,   ICC.2 = 0.2, ICC.3 = 0.2,   omega.2 = 0.2, omega.3 = 0.2, rho = 0.5 ) p <- update(K, type = \"power\", tnum = 100000)"},{"path":"/articles/pump_sample_demo.html","id":"exploring-a-range-of-sample-size-values","dir":"Articles","previous_headings":"","what":"Exploring a range of sample size values","title":"Demo and discussion of the pump_sample method","text":"Now let’s turn determining necessary number schools JJ, given fixed KK. calculated JJ slightly original input 20. Let’s explore information sample size calculation. First, can print information search path algorithm took arrive final answer. step 0, algorithm tries range possible sample size values, bounded calculated minimum maximum values scenario, calculates power . step 0, algorithm fits model data points, uses model attempt arrive closer closer sample size achieving target power. Note dx column printout, : derivative estimated power curve. see particularly large, meaning increase JJ 4 result estimated change power bit less 0.01, set tolerance level. can also plot path algorithm took estimate JJ:  first plot left shows power varies different sample sizes. xx axis, ptpt, shows different values sample size, yy axis shows corresponding values power. point graph represents step search algorithm. number point corresponds step number. case, algorithm took 2 steps initial set points tested step 0. size point corresponds weight step; steps precision (higher tnum) weighted highly, generally occur later steps algorithm. purple line shows target power trying achieve. remaining plots show information steps taken search algorithm arrive final results. middle plot shows calculated power step algorithm. final plot shows value(s) sample size tried step. can also examine power grid points selected JJ. information second estimation step verify results, can help us examine whether smaller values JJ might result similar values power. output, can see power curve flat. outcome means variety sample size values result relatively similar estimates power. Finally, can also visualize power curve.","code":"J1 <- pump_sample(     d_m = \"d3.1_m3rr2rr\",     typesample = \"J\",     MTP = \"HO\",     target.power = target_power,     power.definition = \"D1indiv\",     K = 15,     nbar = 50,     M = 3,     MDES = 0.125,     Tbar = 0.5, alpha = 0.05,     numCovar.1 = 1, numCovar.2 = 1,     R2.1 = 0.1, R2.2 = 0.1,     ICC.2 = 0.2, ICC.3 = 0.2,     omega.2 = 0.2, omega.3 = 0.2,     rho = 0.5 ) search_path(J1) #>    step MTP target.power         pt          dx    w     power       delta #> 1     0  HO        0.418    4.00000          NA  100 0.3200000 -0.09800000 #> 2     0  HO        0.418   88.46708          NA  100 0.4600000  0.04200000 #> 3     0  HO        0.418  282.62278          NA  100 0.4700000  0.05200000 #> 4     0  HO        0.418  586.46708          NA  100 0.4300000  0.01200000 #> 5     0  HO        0.418 1000.00000          NA  100 0.4700000  0.05200000 #> 6     1  HO        0.418   12.89153 0.006228501  110 0.3545455 -0.06345455 #> 7     2  HO        0.418   78.72271 0.014661378  121 0.4380165  0.02001653 #> 8     3  HO        0.418   44.77373 0.001355573  133 0.4436090  0.02560902 #> 9     4  HO        0.418   32.17284 0.001934751  146 0.4315068  0.01350685 #> 10    5  HO        0.418   27.80871 0.003069826 1000 0.4250000  0.00700000 #> 11    5  HO        0.418   27.80871 0.003069826 4000 0.4117500 -0.00625000 plot(J1, type = \"search\") power_curve(J1) #>   step        pt    w MTP target.power  power #> 1    0    6.0000 2000  HO        0.418 0.3375 #> 2    0  110.1948 2000  HO        0.418 0.4570 #> 3    0  343.9264 2000  HO        0.418 0.4435 #> 4    0  707.1948 2000  HO        0.418 0.4615 #> 5    0 1200.0000 2000  HO        0.418 0.4745 plot(J1)"},{"path":"/articles/pump_sample_demo.html","id":"flat-power-curves","dir":"Articles","previous_headings":"","what":"Flat power curves","title":"Demo and discussion of the pump_sample method","text":"designs, power curve can extremely flat certain regions. flatness can mean wide range potential sample size values can result virtually power. Flat curves typically happen top level hierarchical model. example, three-level model, expect little flatness K, flatness J, highest likelihood flatness nbar. pattern occurs top level, can reach asymptote, matter much increase sample size, power limited number top-level units. Intuitively, models, see certain level variation district level, doesn’t matter many schools district–able explain district-level variation unless increase number districts. Let’s examine case see flat power curve. First, calculate power sample size nbar = 5050. Now, attempt recover nbar value given power. output returns unexpectedly large sample size! also see warning message derivative flat. Given warning message flatness, examine power curve plot.  Remember original nbar value 50. can see search power curve flat regions. three level model substantial variation level 2 level 3, even perfect estimation individual sites give us perfect estimation superpopulation. Thus, nbar value 10, curve asymptotes–never able achieve power certain threshold increasing nbar. hand, want power range asymptote, wide variety sample sizes result power. explains result–sample size 22,500 indeed give us intended power, much smaller sample size also give us sufficient power. two ways proceed . First, can look curve, proceed straight plugging sample sizes power function see desired power achieved. Let’s check value 1010 nbar. Even substantially smaller value nbar, achieved level power relatively close initial target. Alternatively, can constrain algorithm focus efforts flat region, example changing argument max_sample_size_nbar, bounds upper end search region. Let’s try setting maximum 100, still somewhat conservative based curve. get sample size estimate much reasonable original estimate, still larger need achieve target power. Sometimes, also helps run sample size algorithm finer-tuned power estimation increasing number test statistics drawn iteration algorithm. parameter start.tnum sets number iterations start , final.tnum controls number test statistics drawn later iterations algorithm refines estimate. can also sometimes get closer original sample size decreasing default tolerance tol = 0.01. decreasing tolerance, impose stricter criteria; final sample size returned must closer target power.","code":"pp1 <- pump_power(     d_m = \"d3.3_m3rc2rc\",     MTP = \"HO\",     nbar = 50,     K = 20,     J = 40,     M = 3,     MDES = rep(0.25, 3),     Tbar = 0.5, alpha = 0.05,     numCovar.1 = 1, numCovar.2 = 1, numCovar.3 = 1,     R2.1 = 0.1, R2.2 = 0.1, R2.3 = 0.1,     ICC.2 = 0.1, ICC.3 = 0.1,     omega.2 = 0, omega.3 = 0, rho = 0.5 ) nbar1 <- pump_sample(         d_m = \"d3.3_m3rc2rc\",         power.definition = \"D1indiv\",         target.power = 0.2594,         typesample = \"nbar\",         MTP = \"HO\",         K = 20,         J = 40,         M = 3,         MDES = rep(0.25, 3),         Tbar = 0.5, alpha = 0.05,         numCovar.1 = 1, numCovar.2 = 1, numCovar.3 = 1,         R2.1 = 0.1, R2.2 = 0.1, R2.3 = 0.1,         ICC.2 = 0.1, ICC.3 = 0.1,         omega.2 = 0, omega.3 = 0, rho = 0.5 ) #> Warning: Using default max sample size for one end of initial bounds of search, #> so estimation may take more time. plot( nbar1 ) pp2 <- pump_power(     d_m = \"d3.3_m3rc2rc\",     MTP = \"HO\",     nbar = 10,     K = 20,     J = 40,     M = 3,     MDES = rep(0.25, 3),     Tbar = 0.5, alpha = 0.05,     numCovar.1 = 1, numCovar.2 = 1, numCovar.3 = 1,     R2.1 = 0.1, R2.2 = 0.1, R2.3 = 0.1,     ICC.2 = 0.1, ICC.3 = 0.1,     omega.2 = 0, omega.3 = 0, rho = 0.5 ) nbar2 <- pump_sample(     d_m = \"d3.3_m3rc2rc\",     typesample = \"nbar\",     MTP = \"HO\",     target.power = pp1$D1indiv[2],     power.definition = \"D1indiv\",     K = 20,     J = 40,     M = 3,     MDES = rep(0.25, 3),     Tbar = 0.5, alpha = 0.05,     numCovar.1 = 1, numCovar.2 = 1, numCovar.3 = 1,     R2.1 = 0.1, R2.2 = 0.1, R2.3 = 0.1,     ICC.2 = 0.1, ICC.3 = 0.1,     omega.2 = 0, omega.3 = 0, rho = 0.5,     max_sample_size_nbar = 100 )"},{"path":"/articles/pump_sample_demo.html","id":"non-convergence","dir":"Articles","previous_headings":"","what":"Non-Convergence","title":"Demo and discussion of the pump_sample method","text":"Let’s return scenario similar previous section, now want higher target power. particular, want target power 40%40\\%, know higher point power asymptotes. see algorithm returns NA required sample size. Let’s examine power search information.  first plot shows us sample size power. can see matter large nbar , can never achieve power 0.260.26. algorithm keeps trying larger larger points reaches maximum number steps, returns NA. want achieve power 0.40.4 design, need change parameters, JJ KK.","code":"nbar3 <- pump_sample(         d_m = \"d3.3_m3rc2rc\",         power.definition = \"D1indiv\",         target.power = 0.4,         typesample = \"nbar\",         MTP = \"HO\",         K = 20,         J = 40,         M = 3,         MDES = rep(0.25, 3),         Tbar = 0.5, alpha = 0.05,         numCovar.1 = 1, numCovar.2 = 1, numCovar.3 = 1,         R2.1 = 0.1, R2.2 = 0.1, R2.3 = 0.1,         ICC.2 = 0.1, ICC.3 = 0.1,         omega.2 = 0, omega.3 = 0, rho = 0.5 ) plot(nbar3, type = \"search\")"},{"path":"/articles/pump_sample_demo.html","id":"note-non-convergence-for-feasible-designs","dir":"Articles","previous_headings":"Non-Convergence","what":"Note: Non-convergence for feasible designs","title":"Demo and discussion of the pump_sample method","text":"rare cases, algorithm may converge even design feasible. Thus, user always inspect search path cases nonconvergence examine possibly feasible value sample size. power asymptote target power, sample size corresponding target power possible even search algorithm unable arrive value. case non-convergence feasible set parameters, following strategies can tried: Re-run function. Due randomness, sometimes repeating call result convergence. Increase max_steps parameter, controls many steps optimization procedure tries. Decrease tolerance. final result may precise, least return plausible range values explore. Decrease max_sample_size. two arguments, max_sample_size_nbar nbar searches, max_sample_size_JK searches J K. Decreasing upper bound focuses algorithm likely area sample size space. Increase precision start.tnum max.tnum. Increasing precision provides better estimate true power curve.","code":""},{"path":"/articles/pump_simulate.html","id":"purpose-of-this-vignette","dir":"Articles","previous_headings":"","what":"Purpose of this vignette","title":"Demo of simulating multi-level data","text":"main purpose PUMP estimate power, MDES, sample size requirements. separate task, PUMP provides extra functions allow user generate data simulates multi-level RCTs. functions may relevant users, provide users may find useful. vignette documents use simulation functions. Overall, simulation functions can used two ways: user can supply design just power calculation tools, , want direct control, can supply data generating parameters directly, including parameters used power tools. simulation function generates data multilevel model random intercepts impacts level. parlance, two-level data use m2rr, three-level, m3rr2rr. single-level data, random effects needed, treatment assumed constant across units.","code":""},{"path":"/articles/pump_simulate.html","id":"generating-data","dir":"Articles","previous_headings":"","what":"Generating data","title":"Demo of simulating multi-level data","text":"PUMP power result, can generate data representing design: final output list overlapping datasets, one outcome. , example, three datasets. first: observed outcome (Yobs), District School ID (D.id, S.id), level 1, level 2, level 3 covariates (C.ijk, X.jk, V.k), treatment assigment (T.x). treatment assignment vector shared across different outcome datasets.","code":"pp <- pump_power( \"d3.1_m3rr2rr\", MDES = 0.2,                    M = 5, rho = 0.8,                   MTP = \"BH\",                   nbar = 30, J = 7, K = 5, Tbar = 0.5 ) sim.data <- gen_sim_data( pp ) head( sim.data[[1]] ) ##          V.k       X.jk      C.ijk S.id D.id         Yobs T.x ## 1 -0.9819827 -0.2346151 -0.1619480    1    1  2.422388557   0 ## 2 -0.9819827 -0.2346151 -0.5228986    1    1 -0.397160508   1 ## 3 -0.9819827 -0.2346151  0.2764065    1    1  0.009688753   0 ## 4 -0.9819827 -0.2346151 -0.7808425    1    1  0.324631103   1 ## 5 -0.9819827 -0.2346151  1.9317788    1    1 -0.710576241   1 ## 6 -0.9819827 -0.2346151  2.1276960    1    1 -0.450927096   0"},{"path":"/articles/pump_simulate.html","id":"generating-for-single-outcome","dir":"Articles","previous_headings":"Generating data","what":"Generating for single outcome","title":"Demo of simulating multi-level data","text":"want one outcome, just get dataframe back, rather list:","code":"pp.one <- update( pp, M = 1 ) sim3 <- gen_sim_data( pp.one ) head( sim3 ) ##         V.k     X.jk       C.ijk S.id D.id       Yobs T.x ## 1 0.3608898 1.048434 -0.52190565    1    1  0.4545076   0 ## 2 0.3608898 1.048434 -0.17679558    1    1  1.5032026   0 ## 3 0.3608898 1.048434 -0.03913424    1    1  1.1670284   1 ## 4 0.3608898 1.048434  0.15895222    1    1 -0.7255679   1 ## 5 0.3608898 1.048434 -0.01656836    1    1  1.0229475   0 ## 6 0.3608898 1.048434 -0.07488324    1    1  1.2134919   1"},{"path":"/articles/pump_simulate.html","id":"getting-components-separately","dir":"Articles","previous_headings":"Generating data","what":"Getting components separately","title":"Demo of simulating multi-level data","text":"Alternatively, gen_sim_data() can called provide data separated part: Now simulation output contains list following vectors: potential outcomes Y0 Y1. MM columns, one outcome. observed outcomes Yobs. MM columns. treatment assignment T.x. numeric vector. covariates level: level 3 V.k, level 2 X.jk, level 1 C.ijk. MM columns. ID, matrix assignments level, level 2 S.id level 3 D.id. two column data.frame Note simulated data contains observed parameters unobserved parameters (unobserved potential outcome, depending treatment assignment).","code":"sim.data.v2 <- gen_sim_data( pp, return.as.dataframe = FALSE ) names( sim.data.v2 ) ## [1] \"Y0\"    \"Y1\"    \"V.k\"   \"X.jk\"  \"C.ijk\" \"ID\"    \"T.x\"   \"Yobs\""},{"path":"/articles/pump_simulate.html","id":"choosing-parameter-values","dir":"Articles","previous_headings":"","what":"Choosing parameter values","title":"Demo of simulating multi-level data","text":"user can also directly set parameter values inform data generating process. parameters directly influence power, others “nuisance” parameters nevertheless needed generate full dataset. full explanations parameters, see Technical Appendix. minimum set parameters user can provide follows: user can also make additional choices influence simulated dat. couple notes possible choices: default, function generate vector school district assignments S.id D.id evenly split, e.g. equal number schools district equal number students school. However, user can also provide vector assignments require specific setup. user specifies rho.default value, matrices populated using assumed ρ\\rho. user can instead provide ρ\\rho matrices. full set parameters user can specify . user chosen model parameters, remaining choice Tbar, proportion units assigned treatment. parameter considered modeling parameter instead informs randomization process. passed part model.params.list:","code":"model.params.list <- list(   M = 3                             # number of outcomes   , J = 7                           # number of schools   , K = 5                           # number of districts                                     # (for two-level model, set K = 1)   , nbar = 30                       # number of individuals per school   , rho.default = 0.5               # default rho value (optional)   ################################################## impact   , MDES = 0.125                    # minimum detectable effect size         ################################################## level 3: districts   , R2.3 = 0.1                      # percent of district variation                                       # explained by district covariates   , ICC.3 = 0.2                     # district intraclass correlation   , omega.3 = 0.1                   # ratio of district effect size variability                                       # to random effects variability   ################################################## level 2: schools   , R2.2 = 0.1                      # percent of school variation                                     # explained by school covariates   , ICC.2 = 0.2                     # school intraclass correlation    , omega.2 = 0.1                   # ratio of school effect size variability                                       # to random effects variability   ################################################## level 1: individuals   , R2.1 = 0.1                      # percent of indiv variation explained                                       # by indiv covariates ) M <- 3 rho.default <- 0.5 default.rho.matrix <- gen_corr_matrix(M = M, rho.scalar = rho.default) default.kappa.matrix <- matrix(0, M, M)   model.params.list <- list(   M = 3                             # number of outcomes   , J = 7                           # number of schools   , K = 5                           # number of districts                                     # (for two-level model, set K = 1)   , nbar = 30                       # number of individuals per school   , S.id = NULL                     # N-length vector of school assignments   , D.id = NULL                     # N-length vector of district assignments   ################################################## grand mean outcome and impact   , Xi0 = 0                         # scalar grand mean outcome under no treatment   , MDES = rep(0.125, M)            # minimum detectable effect size         ################################################## level 3: districts   , R2.3 = rep(0.1, M)              # percent of district variation                                       # explained by district covariates   , rho.V = default.rho.matrix      # MxM correlation matrix of district covariates   , ICC.3 = rep(0.2, M)             # district intraclass correlation   , omega.3 = rep(0.1, M)           # ratio of district effect size variability                                       # to random effects variability   , rho.w0 = default.rho.matrix     # MxM matrix of correlations for district random effects   , rho.w1 = default.rho.matrix     # MxM matrix of correlations for district impacts   , kappa.w =  default.kappa.matrix # MxM matrix of correlations between district                                       # random effects and impacts   ################################################## level 2: schools   , R2.2 = rep(0.1, M)              # percent of school variation                                       # explained by school covariates   , rho.X = default.rho.matrix      # MxM correlation matrix of school covariates   , ICC.2 = rep(0.2, M)             # school intraclass correlation    , omega.2 = rep(0.1, M)           # ratio of school effect size variability                                       # to random effects variability   , rho.u0 = default.rho.matrix     # MxM matrix of correlations for school random effects   , rho.u1 = default.rho.matrix     # MxM matrix of correlations for school impacts   , kappa.u = default.kappa.matrix  # MxM matrix of correlations between school                                       # random effects and impacts   ################################################## level 1: individuals   , R2.1 = rep(0.1, M)              # percent of indiv variation explained                                       # by indiv covariates   , rho.C = default.rho.matrix      # MxM correlation matrix of individual covariates   , rho.r = default.rho.matrix      # MxM matrix of correlations for individual residuals  ) sim.data <- gen_sim_data(d_m = 'd3.3_m3rc2rc', model.params.list, Tbar = 0.5)"},{"path":"/articles/pump_simulate.html","id":"simulation-process","dir":"Articles","previous_headings":"","what":"Simulation process","title":"Demo of simulating multi-level data","text":"briefly walk steps conducted gen_sim_data function case user wants inspect intermediate steps process. First, user-given parameters converted parameters inform data-generating process (DGP). example, certain value R2R^2 converted coefficient value. Next, generate set full simulation data, without assuming treatment assignment occurred. simulated data includes unobserved unobserved quantities, potential outcomes. Finally, generate treatment assignment, observed outcomes YobsY^{obs}. point, need specify design Tbar generate correct treatment assignment. Finally, can converted series dataframes:","code":"dgp.params.list <- convert_params(model.params.list) sim.data <- gen_base_sim_data(dgp.params.list,                                dgp.params = TRUE,                               return.as.dataframe = FALSE ) d_m <- 'd3.3_m3rc2rc' sim.data$T.x <- gen_T.x(     d_m = d_m,     S.id = sim.data$ID$S.id,     D.id = sim.data$ID$D.id,     Tbar = 0.5 ) sim.data$Yobs <- gen_Yobs(sim.data, T.x = sim.data$T.x) sim.data <- PUMP:::makelist_samp( sim.data )"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Luke Miratrix. Author, maintainer. Kristen Hunter. Author. Zarni Htet. Author. Kristin Porter. Author. MDRC. Copyright holder. Institute Education Sciences. Funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hunter KB, Miratrix L, Porter K (2024). “PUMP: Estimating Power, Minimum Detectable Effect Size, Sample Size Adjusting Multiple Outcomes Multi-Level Experiments.” Journal Statistical Software, 108(6), 1–43. doi:10.18637/jss.v108.i06.","code":"@Article{,   title = {{PUMP}: Estimating Power, Minimum Detectable Effect Size, and Sample Size When Adjusting for Multiple Outcomes in Multi-Level Experiments},   author = {Kristen B. Hunter and Luke Miratrix and Kristin Porter},   journal = {Journal of Statistical Software},   year = {2024},   volume = {108},   number = {6},   pages = {1--43},   doi = {10.18637/jss.v108.i06}, }"},{"path":"/index.html","id":"pump-package","dir":"","previous_headings":"","what":"Power Under Multiplicity Project","title":"Power Under Multiplicity Project","text":"Last updated: January 2025. Authors: Zarni Htet Kristen Hunter Luke Miratrix Kristin Porter","code":""},{"path":"/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Power Under Multiplicity Project","text":"https://mdrcny.github.io/PUMP/ Using pkgdown.","code":""},{"path":"/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Power Under Multiplicity Project","text":"randomized controlled trials (RCTs) single intervention measured multiple outcomes, researchers often apply multiple testing procedure (Bonferroni Benjamini-Hochberg) adjust pp-values. adjustment reduces likelihood spurious findings, also changes statistical power, sometimes substantially, reduces probability detecting effects exist. However, consideration frequently ignored typical power analyses, existing tools easily accommodate use multiple testing procedures. introduce PUMP R package tool analysts estimate statistical power, minimum detectable effect size, sample size requirements multi-level RCTs multiple outcomes. Multiple outcomes accounted two ways. First, power estimates PUMP properly account adjustment pp-values applying multiple testing procedure. Second, researchers change focus one outcome multiple outcomes, different definitions statistical power emerge. PUMP allows researchers consider variety definitions power, may appropriate goals study. package estimates power frequentist multi-level mixed effects models, supports variety commonly-used RCT designs models multiple testing procedures. addition main functionality estimating power, minimum detectable effect size, sample size requirements, package allows user easily explore sensitivity quantities changes underlying assumptions. Please see vignettes examples use package.","code":""},{"path":"/index.html","id":"reference-and-support-materials","dir":"","previous_headings":"","what":"Reference and support materials","title":"Power Under Multiplicity Project","text":"following give several tools resources using package effectively: Journal Statistical Software article package Detailed technical appendix giving power formula models Shiny app Power Calculator using package slide-deck overview PUMP","code":""},{"path":"/index.html","id":"the-hot-off-the-press-version","dir":"","previous_headings":"","what":"The hot-off-the-press version","title":"Power Under Multiplicity Project","text":"package CRAN, can install latest version GitHub via: latest version bug fixes extra features, strongly recommend using CRAN version.","code":"devtools::install_github(\"https://github.com/MDRCNY/PUMP\" )"},{"path":"/index.html","id":"a-small-illustration","dir":"","previous_headings":"","what":"A small illustration","title":"Power Under Multiplicity Project","text":"provide one example using PUMP calculate minimium detectable effect size (MDES). user specifies RCT design model (d_m), multiple testing procedure (MTP, case Holm), target power (0.8), type power desired (individual power outcome 1). user also specifies variety design model parameters, number outcomes, sample sizes different levels, variation explained covariates, etc.","code":"m <- pump_mdes(   d_m = \"d3.2_m3fc2rc\",         # choice of design and analysis strategy   MTP = \"HO\",                   # multiple testing procedure   target.power = 0.80,          # desired power   power.definition = \"D1indiv\", # power type   M = 5,                        # number of outcomes   J = 3,                        # number of schools per block   K = 21,                       # number districts   nbar = 258,                   # average number of students per school   Tbar = 0.50,                  # prop treated   alpha = 0.05,                 # significance level   numCovar.1 = 5,               # number of covariates at level 1   numCovar.2 = 3,               # number of covariates at level 2   R2.1 = 0.1, R2.2 = 0.7,       # explanatory power of covariates for each level   ICC.2 = 0.05, ICC.3 = 0.4,    # intraclass correlation coefficients   rho = 0.4 )                   # how correlated outcomes are"},{"path":"/reference/PUMP-package.html","id":null,"dir":"Reference","previous_headings":"","what":"PUMP: Power Under Multiplicity Project — PUMP-package","title":"PUMP: Power Under Multiplicity Project — PUMP-package","text":"Estimates power, minimum detectable effect size (MDES) sample size requirements. context multilevel randomized experiments multiple outcomes. estimation takes account use multiple testing procedures. Development package supported grant Institute Education Sciences (R305D170030). full package description, including detailed technical appendix, see doi:10.18637/jss.v108.i06 .","code":""},{"path":[]},{"path":"/reference/PUMP-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"PUMP: Power Under Multiplicity Project — PUMP-package","text":"Maintainer: Luke Miratrix luke_miratrix@gse.harvard.edu (ORCID) Authors: Kristen Hunter kristen.hunter@unsw.edu.au (ORCID) Zarni Htet Kristin Porter kristin.porter@keporterconsulting.com contributors: MDRC [copyright holder] Institute Education Sciences [funder]","code":""},{"path":"/reference/adjp_wysd.html","id":null,"dir":"Reference","previous_headings":"","what":"Westfall Young Step Down Function — adjp_wysd","title":"Westfall Young Step Down Function — adjp_wysd","text":"adjustment function utilizes comp_rawp_ss helper function compare row matrix sample p-values alternative hypothesis rows matrix p-values complete null.","code":""},{"path":"/reference/adjp_wysd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Westfall Young Step Down Function — adjp_wysd","text":"","code":"adjp_wysd(   rawp.mat,   B,   Sigma,   t.df,   two.tailed,   cl = NULL,   verbose = TRUE,   updateProgress = NULL )"},{"path":"/reference/adjp_wysd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Westfall Young Step Down Function — adjp_wysd","text":"rawp.mat matrix raw p-values H1. dimension: nrow = tnum, ncol = M B numer WY permutations Sigma correlation matrix null p-values t.df degrees freedom null p-values two.tailed one two-tailed test cl cluster object parallel computing verbose whether print messaging updateProgress function update progress bar (used PUMP shiny app)","code":""},{"path":"/reference/adjp_wysd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Westfall Young Step Down Function — adjp_wysd","text":"matrix adjusted p-values","code":""},{"path":"/reference/adjp_wyss.html","id":null,"dir":"Reference","previous_headings":"","what":"Westfall-Young Single Step Adjustment Function — adjp_wyss","title":"Westfall-Young Single Step Adjustment Function — adjp_wyss","text":"adjustment function utilizes comp_rawp_ss helper function compare row matrix sample p-values alternative hypothesis rows matrix p-values complete null.","code":""},{"path":"/reference/adjp_wyss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Westfall-Young Single Step Adjustment Function — adjp_wyss","text":"","code":"adjp_wyss(   rawp.mat,   B,   Sigma,   t.df,   two.tailed,   verbose = TRUE,   updateProgress = NULL )"},{"path":"/reference/adjp_wyss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Westfall-Young Single Step Adjustment Function — adjp_wyss","text":"rawp.mat matrix raw p-values H1. dimension: nrow = tnum, ncol = M B numer WY permutations Sigma correlation matrix null p-values t.df degrees freedom null p-values two.tailed one two-tailed test verbose whether print messaging updateProgress function update progress bar (used PUMP shiny app)","code":""},{"path":"/reference/adjp_wyss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Westfall-Young Single Step Adjustment Function — adjp_wyss","text":"matrix adjusted p-values","code":""},{"path":"/reference/calc_J.html","id":null,"dir":"Reference","previous_headings":"","what":"This function calculates needed J to achieve a given (unadjusted) power — calc_J","title":"This function calculates needed J to achieve a given (unadjusted) power — calc_J","text":"function calculates needed J achieve given (unadjusted) power","code":""},{"path":"/reference/calc_J.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function calculates needed J to achieve a given (unadjusted) power — calc_J","text":"","code":"calc_J(   d_m,   MT = 2.8,   MDES,   K = NULL,   nbar,   Tbar,   R2.1,   R2.2,   R2.3,   ICC.2,   ICC.3,   omega.2,   omega.3 )"},{"path":"/reference/calc_J.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function calculates needed J to achieve a given (unadjusted) power — calc_J","text":"d_m single RCT design (see list/naming convention) MT Number approximate effect-size unit SEs (adjusted degrees freedom issues) MDES needs achieve desired power.  E.g., 2.8 normal theory. MDES scalar; MDES values outcome K scalar; number level 3 units (districts). nbar scalar; harmonic mean number level 1 units per level 2 unit (students per school). Note total number level 1 units, instead number level 1 units nested within level 2 unit, total number level 1 units nbar x J x K. Tbar scalar; proportion samples assigned treatment. R2.1 scalar, vector length M; percent variation explained level 1 covariates outcome. R2.2 scalar, vector length M; percent variation explained level 2 covariates outcome. R2.3 scalar, vector length M; percent variation explained level 3 covariates outcome. ICC.2 scalar, vector length M; level 2 (school) intraclass correlation. ICC.3 scalar, vector length M; level 3 (district) intraclass correlation. omega.2 scalar, vector length M; ratio variance level 2 average impacts variance level 2 random intercepts. omega.3 scalar, vector length M; ratio variance level 3 average impacts variance level 3 random intercepts.","code":""},{"path":"/reference/calc_J.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function calculates needed J to achieve a given (unadjusted) power — calc_J","text":"J, number schools needed","code":""},{"path":"/reference/calc_K.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates K, the number of districts — calc_K","title":"Calculates K, the number of districts — calc_K","text":"Calculates K, number districts","code":""},{"path":"/reference/calc_K.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates K, the number of districts — calc_K","text":"","code":"calc_K(   d_m,   MT = 2.8,   MDES,   J,   nbar,   Tbar,   R2.1,   R2.2,   R2.3,   ICC.2,   ICC.3,   omega.2,   omega.3 )"},{"path":"/reference/calc_K.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates K, the number of districts — calc_K","text":"d_m single RCT d_m (see list/naming convention) MT multiplier MDES scalar; MDES value outcomes J scalar; number schools nbar scalar; harmonic mean number units per school Tbar scalar; proportion samples assigned treatment R2.1 scalar, vector length M; percent variation explained Level 1 covariates outcome R2.2 scalar, vector length M; percent variation explained Level 2 covariates outcome R2.3 scalar, vector length M; percent variation explained Level 3 covariates outcome ICC.2 scalar; school intraclass correlation ICC.3 scalar; district intraclass correlation omega.2 scalar; ratio school effect size variability random effects   variability omega.3 scalar; ratio district effect size variability random effects   variability","code":""},{"path":"/reference/calc_K.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates K, the number of districts — calc_K","text":"K, number districts","code":""},{"path":"/reference/calc_MT.html","id":null,"dir":"Reference","previous_headings":"","what":"Caculate multiplier for MDE calculation — calc_MT","title":"Caculate multiplier for MDE calculation — calc_MT","text":"Caculate multiplier MDE calculation","code":""},{"path":"/reference/calc_MT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Caculate multiplier for MDE calculation — calc_MT","text":"","code":"calc_MT(df, alpha, two.tailed, target.power)"},{"path":"/reference/calc_SE.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes Q_m, the standard error of the effect size estimate — calc_SE","title":"Computes Q_m, the standard error of the effect size estimate — calc_SE","text":"Function calculate theoretical true (unadjusted) standard error ATE estimate given d_m model, effect size units.","code":""},{"path":"/reference/calc_SE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes Q_m, the standard error of the effect size estimate — calc_SE","text":"","code":"calc_SE(   d_m,   J,   K,   nbar,   Tbar,   R2.1,   R2.2,   R2.3,   ICC.2,   ICC.3,   omega.2,   omega.3 )"},{"path":"/reference/calc_SE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes Q_m, the standard error of the effect size estimate — calc_SE","text":"d_m single RCT d_m (see list/naming convention). J scalar; number schools K scalar; number districts nbar scalar; harmonic mean number units per school Tbar scalar; proportion samples assigned treatment R2.1 scalar, vector length M; percent variation explained Level 1 covariates outcome R2.2 scalar, vector length M; percent variation explained Level 2 covariates outcome R2.3 scalar, vector length M; percent variation explained Level 3 covariates outcome ICC.2 scalar, vector length M; school intraclass correlation ICC.3 scalar, vector length M; district intraclass correlation omega.2 scalar, vector length M; ratio school effect size variability random effects variability omega.3 scalar, vector length M; ratio district effect size variability random effects variability","code":""},{"path":"/reference/calc_SE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes Q_m, the standard error of the effect size estimate — calc_SE","text":"vector; standard error effect size estimate","code":""},{"path":"/reference/calc_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate degrees of freedom (support function) — calc_df","title":"Calculate degrees of freedom (support function) — calc_df","text":"Given sample sizes, return used degrees freedom (frequently conservative) design model.","code":""},{"path":"/reference/calc_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate degrees of freedom (support function) — calc_df","text":"","code":"calc_df(d_m, J, K, nbar, numCovar.1, numCovar.2, numCovar.3, validate = TRUE)"},{"path":"/reference/calc_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate degrees of freedom (support function) — calc_df","text":"d_m string; single context, design model code. See pump_info() list choices. J scalar; harmonic mean number level 2 units per level 3 unit (schools per district). Note total number level 2 units, instead number level 2 units nested within level 3 unit, total number level 2 units J x K. K scalar; number level 3 units (districts). nbar scalar; harmonic mean number level 1 units per level 2 unit (students per school). Note total number level 1 units, instead number level 1 units nested within level 2 unit, total number level 1 units nbar x J x K. numCovar.1 scalar; number level 1 (individual) covariates. numCovar.2 scalar; number level 2 (school) covariates. numCovar.3 scalar; number level 3 (district) covariates. validate logical; whether validate output df <= 0.","code":""},{"path":"/reference/calc_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate degrees of freedom (support function) — calc_df","text":"scalar; degrees freedom context.","code":""},{"path":"/reference/calc_nbar.html","id":null,"dir":"Reference","previous_headings":"","what":"This function calculates needed nbar to achieve a given power — calc_nbar","title":"This function calculates needed nbar to achieve a given power — calc_nbar","text":"function calculates needed nbar achieve given power","code":""},{"path":"/reference/calc_nbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function calculates needed nbar to achieve a given power — calc_nbar","text":"","code":"calc_nbar(   d_m,   MT = 2.8,   MDES,   J = NULL,   K = NULL,   Tbar,   R2.1,   R2.2 = NULL,   ICC.2 = NULL,   omega.2 = NULL,   R2.3 = NULL,   ICC.3 = NULL,   omega.3 = NULL )"},{"path":"/reference/calc_nbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function calculates needed nbar to achieve a given power — calc_nbar","text":"d_m single RCT design (see list/naming convention) MT Number approximate effect-size unit SEs (adjusted degrees freedom issues) MDES needs achieve desired power.  E.g., 2.8 normal theory. MDES scalar; MDES values outcome J scalar; number schools K scalar; number level 3 units (districts). Tbar scalar; proportion samples assigned treatment. R2.1 scalar, vector length M; percent variation explained level 1 covariates outcome. R2.2 scalar, vector length M; percent variation explained level 2 covariates outcome. ICC.2 scalar, vector length M; level 2 (school) intraclass correlation. omega.2 scalar, vector length M; ratio variance level 2 average impacts variance level 2 random intercepts. R2.3 scalar, vector length M; percent variation explained level 3 covariates outcome. ICC.3 scalar, vector length M; level 3 (district) intraclass correlation. omega.3 scalar, vector length M; ratio variance level 3 average impacts variance level 3 random intercepts.","code":""},{"path":"/reference/calc_nbar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function calculates needed nbar to achieve a given power — calc_nbar","text":"nbar, number individuals needed, NA possible given design","code":""},{"path":"/reference/calc_pval.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates p-values from t-values — calc_pval","title":"Calculates p-values from t-values — calc_pval","text":"Calculates p-values t-values","code":""},{"path":"/reference/calc_pval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates p-values from t-values — calc_pval","text":"","code":"calc_pval(rawt, t.df, two.tailed)"},{"path":"/reference/calc_pval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates p-values from t-values — calc_pval","text":"rawt vector t statistics t.df degrees freedom two.tailed whether calculate 1 2-tailed p-values","code":""},{"path":"/reference/calc_pval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates p-values from t-values — calc_pval","text":"power results individual, minimum, complete power","code":""},{"path":"/reference/check_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Check correlation of test statistics (simulation function) — check_cor","title":"Check correlation of test statistics (simulation function) — check_cor","text":"Estimates pairwise correlations test statistics outcomes. Takes two options: - pumpresult object - list necessary data-generating parameters - context (d_m) - Tbar Note function can take several minutes run.","code":""},{"path":"/reference/check_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check correlation of test statistics (simulation function) — check_cor","text":"","code":"check_cor(   pump.object = NULL,   rho.V = NULL,   rho.w0 = NULL,   rho.w1 = NULL,   rho.X = NULL,   rho.u0 = NULL,   rho.u1 = NULL,   rho.C = NULL,   rho.r = NULL,   d_m = NULL,   model.params.list = NULL,   Tbar = 0.5,   n.sims = 100 )"},{"path":"/reference/check_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check correlation of test statistics (simulation function) — check_cor","text":"pump.object pumpresult object. rho.V matrix; correlation matrix level 3 covariates. rho.w0 matrix; correlation matrix level 3 random effects. rho.w1 matrix; correlation matrix level 3 random impacts. rho.X matrix; correlation matrix level 2 covariates. rho.u0 matrix; correlation matrix level 2 random effects. rho.u1 matrix; correlation matrix level 2 random impacts. rho.C matrix; correlation matrix level 1 covariates. rho.r matrix; correlation matrix level 1 residuals. d_m string; single context, design model code. See pump_info() list choices. model.params.list list; model parameters ICC, R2, etc. See simulation vignette details. Tbar scalar; proportion samples assigned treatment. n.sims numeric; Number simulated datasets generate. datasets achieve accurate result also increase computation time.","code":""},{"path":"/reference/check_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check correlation of test statistics (simulation function) — check_cor","text":"matrix; M x M correlation matrix test statistics.","code":""},{"path":"/reference/check_cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check correlation of test statistics (simulation function) — check_cor","text":"","code":"pp <- pump_power( d_m = \"d3.2_m3ff2rc\",                   MTP = \"BF\",                   MDES = rep( 0.10, 2 ),                   M = 2,                   J = 4, # number of schools/block                   K = 10, # number RA blocks                   nbar = 50,                   Tbar = 0.50, # prop Tx                   alpha = 0.05, # significance level                   numCovar.1 = 5, numCovar.2 = 3,                   R2.1 = 0.1, R2.2 = 0.7,                   ICC.2 = 0.05, ICC.3 = 0.4,                   rho = 0.4, # how correlated test statistics are                   tnum = 200 ) cor.tstat <- check_cor(     pump.object = pp, n.sims = 4 ) est.cor <- mean(cor.tstat[lower.tri(cor.tstat)])"},{"path":"/reference/comp_rawp_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for Westfall Young Step Down — comp_rawp_sd","title":"Helper function for Westfall Young Step Down — comp_rawp_sd","text":"Helper function Westfall Young Step ","code":""},{"path":"/reference/comp_rawp_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for Westfall Young Step Down — comp_rawp_sd","text":"","code":"comp_rawp_sd(nullp, rawp, rawp.order)"},{"path":"/reference/comp_rawp_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for Westfall Young Step Down — comp_rawp_sd","text":"nullp vector p-values H0 rawp vector p-values H1 rawp.order order vector raw p-values ascending order","code":""},{"path":"/reference/comp_rawp_sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for Westfall Young Step Down — comp_rawp_sd","text":"returns vector 1s 0s lengths M outcomes","code":""},{"path":"/reference/comp_rawp_ss.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for Westfall Young Single Step — comp_rawp_ss","title":"Helper function for Westfall Young Single Step — comp_rawp_ss","text":"Used Westfall-Young single-step multiple testing procedure (MTP). compares whether null values across outcomes exceeds raw value outcome","code":""},{"path":"/reference/comp_rawp_ss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for Westfall Young Single Step — comp_rawp_ss","text":"","code":"comp_rawp_ss(nullp, rawp)"},{"path":"/reference/comp_rawp_ss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for Westfall Young Single Step — comp_rawp_ss","text":"nullp vector p values H0 rawp vector raw p values H1","code":""},{"path":"/reference/comp_rawp_ss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for Westfall Young Single Step — comp_rawp_ss","text":"returns vector 1s 0s length M outcomes","code":""},{"path":"/reference/convert_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts model params into DGP params (simulation function) — convert_params","title":"Converts model params into DGP params (simulation function) — convert_params","text":"Converts user-provided parameters ICC   omega data-generating parameters multilevel random   effects model used produce simulated data, variance   values covariate coefficients. function beyond main scope calculating power,   instead used simulating data. info use, see   simulation vignette.","code":""},{"path":"/reference/convert_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts model params into DGP params (simulation function) — convert_params","text":"","code":"convert_params(param.list)"},{"path":"/reference/convert_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts model params into DGP params (simulation function) — convert_params","text":"param.list list; model parameters ICC, R2, etc.","code":""},{"path":"/reference/convert_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts model params into DGP params (simulation function) — convert_params","text":"list; data-generating parameters.","code":""},{"path":"/reference/estimate_power_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a power curve for sample size or mdes. — estimate_power_curve","title":"Calculate a power curve for sample size or mdes. — estimate_power_curve","text":"grid points based passed sample mdes pumpresult, estimate power.","code":""},{"path":"/reference/estimate_power_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a power curve for sample size or mdes. — estimate_power_curve","text":"","code":"estimate_power_curve(   p,   low = NULL,   high = NULL,   high.max = 1000,   grid.size = 5,   tnum = 2000 )"},{"path":"/reference/estimate_power_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a power curve for sample size or mdes. — estimate_power_curve","text":"p pumpresult object low Low end grid high High end grid high.max high provided, maximum possible high grid.size Number points grid tnum number test statistics (samples)","code":""},{"path":"/reference/estimate_power_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a power curve for sample size or mdes. — estimate_power_curve","text":"List powers grid points.","code":""},{"path":"/reference/find_best.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine next point to check for correct power level. — find_best","title":"Determine next point to check for correct power level. — find_best","text":"Extract roots power curve fit given evaluated points","code":""},{"path":"/reference/find_best.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine next point to check for correct power level. — find_best","text":"","code":"find_best(test.pts, target.power, gamma = 1.5)"},{"path":"/reference/find_best.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine next point to check for correct power level. — find_best","text":"test.pts power evaluated different points target.power goal power gamma Number > 1. amount can extend search range (gamma) (1/gamma) want search outside current boundaries.  1 means extend (potentially cause search stall, recommended).","code":""},{"path":"/reference/find_best.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine next point to check for correct power level. — find_best","text":"List estimate curve reaches target.power, derivative   curve point, parameters fit curve.","code":""},{"path":"/reference/fit_bounded_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a bounded logistic curve — fit_bounded_logistic","title":"Fit a bounded logistic curve — fit_bounded_logistic","text":"Curve form f(y) = pmin + (pmax-pmin) * logistic( beta0 + beta1*x )","code":""},{"path":"/reference/fit_bounded_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a bounded logistic curve — fit_bounded_logistic","text":"","code":"fit_bounded_logistic(x, y, wt)"},{"path":"/reference/fit_bounded_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a bounded logistic curve — fit_bounded_logistic","text":"x vector covariate values logistics y proportion 1s given value x.  length x. wt weight place given x-y pair.  length x, scalar.","code":""},{"path":"/reference/fit_bounded_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a bounded logistic curve — fit_bounded_logistic","text":"Vector four estimated parameters logistic curve: beta0,   beta1, pmin, pmax","code":""},{"path":"/reference/fit_bounded_logistic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit a bounded logistic curve — fit_bounded_logistic","text":"(logistic defined plogis) Note logistic curve perfect fit functional form power curve, useful approximation search procedure.","code":""},{"path":"/reference/gen_RE_cov_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"generate a parameterized covariance matrix from the provided 3 blocks — gen_RE_cov_matrix","title":"generate a parameterized covariance matrix from the provided 3 blocks — gen_RE_cov_matrix","text":"generate parameterized covariance matrix provided 3 blocks","code":""},{"path":"/reference/gen_RE_cov_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate a parameterized covariance matrix from the provided 3 blocks — gen_RE_cov_matrix","text":"","code":"gen_RE_cov_matrix(Sigma.w, Sigma.z, Sigma.wz)"},{"path":"/reference/gen_RE_cov_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate a parameterized covariance matrix from the provided 3 blocks — gen_RE_cov_matrix","text":"Sigma.w level 3 covariance matrix Sigma.z level 2 covariance matrix Sigma.wz covariance level 2 level 3","code":""},{"path":"/reference/gen_RE_cov_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate a parameterized covariance matrix from the provided 3 blocks — gen_RE_cov_matrix","text":"2M x 2M matrix generating correlated pairs random effects","code":""},{"path":"/reference/gen_T.x.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate treatment assignment vector (simulation function) — gen_T.x","title":"Generate treatment assignment vector (simulation function) — gen_T.x","text":"Given RCT design supporting information, generates treatment assignments student. function beyond main scope calculating power, instead used simulating data. info use, see simulation vignette.","code":""},{"path":"/reference/gen_T.x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate treatment assignment vector (simulation function) — gen_T.x","text":"","code":"gen_T.x(d_m, S.id, D.id, Tbar)"},{"path":"/reference/gen_T.x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate treatment assignment vector (simulation function) — gen_T.x","text":"d_m string; design model. S.id vector; school assignments. D.id vector; district assignments. Tbar scalar; probability treatment assignment.","code":""},{"path":"/reference/gen_T.x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate treatment assignment vector (simulation function) — gen_T.x","text":"vector; treatment assignments unit.","code":""},{"path":"/reference/gen_Yobs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate observed outcomes (simulation function) — gen_Yobs","title":"Generate observed outcomes (simulation function) — gen_Yobs","text":"Takes full dataset observed latent   potential outcomes treatment assignment vector,   returns observed outcomes. function beyond main scope calculating power,   instead used simulating data. info use, see   simulation vignette.","code":""},{"path":"/reference/gen_Yobs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate observed outcomes (simulation function) — gen_Yobs","text":"","code":"gen_Yobs(full.data, T.x)"},{"path":"/reference/gen_Yobs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate observed outcomes (simulation function) — gen_Yobs","text":"full.data data.frame; full dataset potential outcomes. T.x vector; binary assignment treat/control.","code":""},{"path":"/reference/gen_Yobs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate observed outcomes (simulation function) — gen_Yobs","text":"vector; observed outcomes","code":""},{"path":"/reference/gen_base_sim_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate base simulated multi-level data (simulation function) — gen_base_sim_data","title":"Generate base simulated multi-level data (simulation function) — gen_base_sim_data","text":"Generates simulated data multi-level RCTs   pump-supported designs models unobserved potential   outcomes. function generate treatment assignments   observed outcomes–see gen_sim_data() . method takes list necessary data-generating   parameters, following rest package. function beyond main scope calculating power,   instead used simulating data. info use, see   simulation vignette.","code":""},{"path":"/reference/gen_base_sim_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate base simulated multi-level data (simulation function) — gen_base_sim_data","text":"","code":"gen_base_sim_data(   param.list,   pump.object = NULL,   return.as.dataframe = TRUE,   no.list = TRUE,   dgp.params = FALSE )"},{"path":"/reference/gen_base_sim_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate base simulated multi-level data (simulation function) — gen_base_sim_data","text":"param.list list; model parameters ICC, R2, etc. See simulation vignette details. pump.object pumpresult object. return..dataframe TRUE means return list dataframes, one outcome.  FALSE means return components covariates, etc., list. .list relevant return..dataframe=TRUE. .list=TRUE means M=1 return dataframe, list length 1.  FALSE means return list length 1, even 1 outcome. dgp.params TRUE means param.list already converted DGP parameters, FALSE means needs converted via `convert_params()`.","code":""},{"path":"/reference/gen_base_sim_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate base simulated multi-level data (simulation function) — gen_base_sim_data","text":"list; potential outcomes given control y0, treatment y1,   covariates V.k, X.jk, C.ijk, list dataframes   return..dataframe = TRUE.","code":""},{"path":[]},{"path":"/reference/gen_cluster_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates school and district assignments (simulation function) — gen_cluster_ids","title":"Generates school and district assignments (simulation function) — gen_cluster_ids","text":"Generates simple default schools districts IDs   individual students purpose simulations. assumes   equal sized schools equal sized districts. function beyond main scope calculating power,   instead used simulating data. info use, see   simulation vignette.","code":""},{"path":"/reference/gen_cluster_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates school and district assignments (simulation function) — gen_cluster_ids","text":"","code":"gen_cluster_ids(nbar, J, K)"},{"path":"/reference/gen_cluster_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates school and district assignments (simulation function) — gen_cluster_ids","text":"nbar scalar; number individuals per school. J scalar; number schools per district. K scalar; number districts.","code":""},{"path":"/reference/gen_cluster_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates school and district assignments (simulation function) — gen_cluster_ids","text":"list; school district assignments (S.id, D.id)   individual.","code":""},{"path":"/reference/gen_corr_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate correlation matrix (simulation function) — gen_corr_matrix","title":"Generate correlation matrix (simulation function) — gen_corr_matrix","text":"Generate correlation matrix (simulation function)","code":""},{"path":"/reference/gen_corr_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate correlation matrix (simulation function) — gen_corr_matrix","text":"","code":"gen_corr_matrix(M, rho.scalar)"},{"path":"/reference/gen_corr_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate correlation matrix (simulation function) — gen_corr_matrix","text":"M scalar; dimension matrix. rho.scalar scalar; rho value.","code":""},{"path":"/reference/gen_corr_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate correlation matrix (simulation function) — gen_corr_matrix","text":"matrix; M x M correlation matrix rho.scalar diagonal.","code":""},{"path":"/reference/gen_cov_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"generate covariance matrix between two variables — gen_cov_matrix","title":"generate covariance matrix between two variables — gen_cov_matrix","text":"generate covariance matrix two variables","code":""},{"path":"/reference/gen_cov_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate covariance matrix between two variables — gen_cov_matrix","text":"","code":"gen_cov_matrix(D, var1.vec, var2.vec, rho.matrix)"},{"path":"/reference/gen_cov_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate covariance matrix between two variables — gen_cov_matrix","text":"D dimension matrix var1.vec vector variances first variable var2.vec vector variances second variable rho.matrix matrix correlations","code":""},{"path":"/reference/gen_cov_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate covariance matrix between two variables — gen_cov_matrix","text":"Sigma matrix covariance","code":""},{"path":"/reference/gen_sim_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate simulated multi-level data (simulation function) — gen_sim_data","title":"Generate simulated multi-level data (simulation function) — gen_sim_data","text":"Generates simulated data multi-level RCTs   pump-supported designs models unobserved observed   potential outcomes. Takes two options: - pumpresult object - list necessary data-generating parameters   - context (d_m)   - Tbar (proportion assigned treatment) function beyond main scope calculating power,   instead used simulating data. info use, see   simulation vignette.","code":""},{"path":"/reference/gen_sim_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate simulated multi-level data (simulation function) — gen_sim_data","text":"","code":"gen_sim_data(   d_m = NULL,   param.list = NULL,   Tbar = 0.5,   pump.object = NULL,   return.as.dataframe = TRUE,   no.list = TRUE,   include_POs = FALSE )"},{"path":"/reference/gen_sim_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate simulated multi-level data (simulation function) — gen_sim_data","text":"d_m string; single context, design model code. See pump_info() list choices. param.list list; model parameters ICC, R2, etc. See simulation vignette details. Tbar scalar; proportion samples assigned treatment. pump.object pumpresult object. return..dataframe TRUE means return list dataframes, one outcome.  FALSE means return components covariates, etc., list. .list relevant return..dataframe=TRUE. .list=TRUE means M=1 return dataframe, list length 1.  FALSE means return list length 1, even 1 outcome. include_POs Include columns potential outcomes addition observed outcome.","code":""},{"path":"/reference/gen_sim_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate simulated multi-level data (simulation function) — gen_sim_data","text":"list; potential outcomes, covariates, observed outcomes,   treatment assignment.","code":""},{"path":"/reference/gen_sim_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate simulated multi-level data (simulation function) — gen_sim_data","text":"","code":"pp <- pump_power( d_m = \"d3.2_m3ff2rc\",                   MTP = \"BF\",                   MDES = rep( 0.10, 3 ),                   M = 3,                   J = 3, # number of schools/block                   K = 21, # number RA blocks                   nbar = 258,                   Tbar = 0.50, # prop Tx                   alpha = 0.05, # significance level                   numCovar.1 = 5, numCovar.2 = 3,                   R2.1 = 0.1, R2.2 = 0.7,                   ICC.2 = 0.05, ICC.3 = 0.4,                   rho = 0.4,                   tnum = 200 ) sim.data <- gen_sim_data(pump.object = pp)"},{"path":"/reference/get_adjp_minp.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for Westfall Young — get_adjp_minp","title":"Helper function for Westfall Young — get_adjp_minp","text":"enforces monotonicity p-values.","code":""},{"path":"/reference/get_adjp_minp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for Westfall Young — get_adjp_minp","text":"","code":"get_adjp_minp(ind.B, rawp.order)"},{"path":"/reference/get_adjp_minp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for Westfall Young — get_adjp_minp","text":"ind.B matrix indicator variables raw test statistic exceeds null test statistics. dimensions: nrow = tnum, ncol = M. rawp.order order raw p-values ascending order","code":""},{"path":"/reference/get_adjp_minp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for Westfall Young — get_adjp_minp","text":"returns adjusted p-value matrix","code":""},{"path":"/reference/get_power_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates different definitions of power (support function) — get_power_results","title":"Calculates different definitions of power (support function) — get_power_results","text":"function takes matrix adjusted p-values   unadjusted p-values outputs different types power. function mostly internal use, may interest   users wish calculate power .","code":""},{"path":"/reference/get_power_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates different definitions of power (support function) — get_power_results","text":"","code":"get_power_results(   adj.pval.mat,   unadj.pval.mat,   ind.nonzero,   alpha,   drop.zero.outcomes = TRUE,   adj = TRUE )"},{"path":"/reference/get_power_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates different definitions of power (support function) — get_power_results","text":"adj.pval.mat matrix; adjusted p-values, columns outcomes unadj.pval.mat matrix; unadjusted p-values, columns outcomes ind.nonzero vector; outcomes correspond nonzero effects. alpha scalar; family wise error rate (FWER). drop.zero.outcomes logical; whether report power results outcomes MDES = 0. adj logical; whether p-values unadjusted .","code":""},{"path":"/reference/get_power_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates different definitions of power (support function) — get_power_results","text":"data frame; power results individual, minimum, complete   power.","code":""},{"path":"/reference/get_pval_tstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Function: get_pval_tstat extracts p-value and t statistics from a given fitted model. — get_pval_tstat","title":"Function: get_pval_tstat extracts p-value and t statistics from a given fitted model. — get_pval_tstat","text":"Function: get_pval_tstat extracts p-value t statistics given fitted model.","code":""},{"path":"/reference/get_pval_tstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function: get_pval_tstat extracts p-value and t statistics from a given fitted model. — get_pval_tstat","text":"","code":"get_pval_tstat(mod, d_m, model.params.list)"},{"path":"/reference/get_pval_tstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function: get_pval_tstat extracts p-value and t statistics from a given fitted model. — get_pval_tstat","text":"mod model object d_m design/model model.params.list list model parameters","code":""},{"path":"/reference/get_rawpt.html","id":null,"dir":"Reference","previous_headings":"","what":"Function: get_rawpt — get_rawpt","title":"Function: get_rawpt — get_rawpt","text":"Fits models series datasets, extracts p values t statistics","code":""},{"path":"/reference/get_rawpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function: get_rawpt — get_rawpt","text":"","code":"get_rawpt(dat.all, d_m, model.params.list)"},{"path":"/reference/get_rawpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function: get_rawpt — get_rawpt","text":"dat.list datasets (length M) d_m design/model model.params.list list model parameters","code":""},{"path":"/reference/interacted_linear_estimators.html","id":null,"dir":"Reference","previous_headings":"","what":"Interacted linear regression models — interacted_linear_estimators","title":"Interacted linear regression models — interacted_linear_estimators","text":"Code taken : https://github.com/lmiratrix/blkvar/blob_master/R/linear_model_method.R","code":""},{"path":"/reference/interacted_linear_estimators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interacted linear regression models — interacted_linear_estimators","text":"","code":"interacted_linear_estimators(   Yobs,   Z,   B,   siteID = NULL,   data = NULL,   control_formula = NULL,   use.lmer = FALSE )"},{"path":"/reference/interacted_linear_estimators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interacted linear regression models — interacted_linear_estimators","text":"Dataframe different versions estimator (person   site weighted)","code":""},{"path":"/reference/interacted_linear_estimators.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interacted linear regression models — interacted_linear_estimators","text":"linear models block treatment interaction terms. final ATE estimates weighted average block (site) specific ATE estimates. siteID passed, weight RA blocks within site average site estimates. SEs come overall variance-covariance matrix.","code":""},{"path":"/reference/make_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Function: make.model — make_model","title":"Function: make.model — make_model","text":"Function generate fit model simulated dataset.","code":""},{"path":"/reference/make_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function: make.model — make_model","text":"","code":"make_model(dat.m, d_m)"},{"path":"/reference/make_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function: make.model — make_model","text":"dat.m data frame single outcome d_m design/model","code":""},{"path":"/reference/makelist_samp.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert multi-outcome data structure to dataframe for each outcome. — makelist_samp","title":"Convert multi-outcome data structure to dataframe for each outcome. — makelist_samp","text":"Given simulated multi-outcome structure, make list complete (tidy) rectangular datasets, one outcome.","code":""},{"path":"/reference/makelist_samp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert multi-outcome data structure to dataframe for each outcome. — makelist_samp","text":"","code":"makelist_samp(samp.obs, T.x = NULL, include_POs = FALSE)"},{"path":"/reference/makelist_samp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert multi-outcome data structure to dataframe for each outcome. — makelist_samp","text":"samp.obs single iteration observed data T.x vector treatment assignments include_POs Include columns potential outcomes addition observed outcome.","code":""},{"path":"/reference/makelist_samp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert multi-outcome data structure to dataframe for each outcome. — makelist_samp","text":"List dataframes.","code":""},{"path":"/reference/optimize_power.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimizes power to help in search for MDES or SS — optimize_power","title":"Optimizes power to help in search for MDES or SS — optimize_power","text":"Optimizes power help search MDES SS","code":""},{"path":"/reference/optimize_power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimizes power to help in search for MDES or SS — optimize_power","text":"","code":"optimize_power(   d_m,   search.type,   MTP,   target.power,   power.definition,   tol,   start.low,   start.high,   MDES = NULL,   J = NULL,   K = 1,   nbar = NULL,   M = M,   numZero = numZero,   Tbar = Tbar,   alpha,   two.tailed,   numCovar.1 = 0,   numCovar.2 = 0,   numCovar.3 = 0,   R2.1 = 0,   R2.2 = 0,   R2.3 = 0,   ICC.2 = 0,   ICC.3 = 0,   omega.2 = 0,   omega.3 = 0,   rho,   B = NULL,   parallel.WY.cores = 1,   max.steps = 20,   tnum = 1000,   start.tnum = round(tnum/10),   final.tnum = 4 * tnum,   give.warnings = FALSE,   grid.only = FALSE,   grid.size = 5 )"},{"path":"/reference/optimize_power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimizes power to help in search for MDES or SS — optimize_power","text":"d_m string; single context, design model code. See pump_info() list choices. search.type type optimization search conducted. Options: K, J, nbar, mdes MTP string, vector strings; multiple testing procedure(s). See pump_info() list choices. target.power target power search algorithm. power.definition see pump_info() possible power definitions. tol tolerance target power, defaults 0.01 (1 parameter controls search done: estimated power (checked `final.tnum` iterations) within `tol`, search stops. start.low lower bound optimization procedure start.high upper bound optimization procedure MDES scalar vector; desired MDES values outcome. Please provide scalar, vector length M, vector values non-zero outcomes. J scalar; harmonic mean number level 2 units per level 3 unit (schools per district). Note total number level 2 units, instead number level 2 units nested within level 3 unit, total number level 2 units J x K. K scalar; number level 3 units (districts). nbar scalar; harmonic mean number level 1 units per level 2 unit (students per school). Note total number level 1 units, instead number level 1 units nested within level 2 unit, total number level 1 units nbar x J x K. M scalar; number hypothesis tests (outcomes), including zero outcomes. numZero scalar; additional number outcomes assumed zero. Please provide NumZero + length(MDES) = M, length(MDES) 1. Tbar scalar; proportion samples assigned treatment. alpha scalar; family wise error rate (FWER). two.tailed scalar; TRUE/FALSE two-tailed one-tailed power calculation. numCovar.1 scalar; number level 1 (individual) covariates. numCovar.2 scalar; number level 2 (school) covariates. numCovar.3 scalar; number level 3 (district) covariates. R2.1 scalar, vector length M; percent variation explained level 1 covariates outcome. R2.2 scalar, vector length M; percent variation explained level 2 covariates outcome. R2.3 scalar, vector length M; percent variation explained level 3 covariates outcome. ICC.2 scalar, vector length M; level 2 (school) intraclass correlation. ICC.3 scalar, vector length M; level 3 (district) intraclass correlation. omega.2 scalar, vector length M; ratio variance level 2 average impacts variance level 2 random intercepts. omega.3 scalar, vector length M; ratio variance level 3 average impacts variance level 3 random intercepts. rho scalar; assumed correlation pairs test statistics. B scalar; number permutations Westfall-Young procedures. parallel.WY.cores number cores use parallel processing WY-SD. max.steps many steps allowed terminating. tnum scalar; number test statistics draw. Increasing tnum increases precision computation time. start.tnum number samples start search (increase step). final.tnum number samples final draw. give.warnings whether return optimizer warnings grid.TRUE means generate grid start.low start.high, iterative search. (Useful mapping power curve rather identifying point particular power.) grid.size Number points check initial search grid. Grid spaced quadratic sequence (e.g., 0, 1, 4, 9, 16 0-16 span).","code":""},{"path":"/reference/optimize_power.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimizes power to help in search for MDES or SS — optimize_power","text":"power","code":""},{"path":"/reference/parse_d_m.html","id":null,"dir":"Reference","previous_headings":"","what":"Return characteristics of a given context/d_m code (support function) — parse_d_m","title":"Return characteristics of a given context/d_m code (support function) — parse_d_m","text":"Returns number levels model level. See   pump_info()$Context get list supported d_ms.","code":""},{"path":"/reference/parse_d_m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return characteristics of a given context/d_m code (support function) — parse_d_m","text":"","code":"parse_d_m(d_m, d_only = FALSE)"},{"path":"/reference/parse_d_m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return characteristics of a given context/d_m code (support function) — parse_d_m","text":"d_m string; context parse. d_only TRUE/FALSE; TRUE means look design, ignore model present.","code":""},{"path":"/reference/parse_d_m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return characteristics of a given context/d_m code (support function) — parse_d_m","text":"list; list features including number levels, level   randomization, etc.","code":""},{"path":"/reference/parse_d_m.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return characteristics of a given context/d_m code (support function) — parse_d_m","text":"","code":"supported <- pump_info(comment = FALSE)$Context parse_d_m( supported$d_m[4] ) #> $levels #> [1] 2 #>  #> $rand_level #> [1] 1 #>  #> $model2 #> [1] \"fr\" #>  #> $model2.p #> [1] \"f\" \"r\" #>  #> $model3 #> NULL #>  #> $model3.p #> NULL #>  #> $FE.2 #> [1] TRUE #>  #> $FE.3 #> [1] NA #>  #> $design #> [1] \"d2.1\" #>"},{"path":"/reference/parse_power_definition.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse the power definition — parse_power_definition","title":"Parse the power definition — parse_power_definition","text":"Parse power definition","code":""},{"path":"/reference/parse_power_definition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse the power definition — parse_power_definition","text":"","code":"parse_power_definition(power.definition, M)"},{"path":"/reference/parse_power_definition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse the power definition — parse_power_definition","text":"power.definition .e. D1indiv, min1, complete M number outcomes","code":""},{"path":"/reference/parse_power_definition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse the power definition — parse_power_definition","text":"information power type","code":""},{"path":"/reference/plot.pumpgridresult.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a pumpgridresult object (result function) — plot.pumpgridresult","title":"Plot a pumpgridresult object (result function) — plot.pumpgridresult","text":"Plots grid results across values single parameter, specified user using var.vary, single definition power, specified power.definition. multiple things vary grid, outcome (power, mdes, sample size) averaged (marginalized) across varying factors. treats grid multifactor simulation, showing \"main effect\" specified parameter.","code":""},{"path":"/reference/plot.pumpgridresult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a pumpgridresult object (result function) — plot.pumpgridresult","text":"","code":"# S3 method for class 'pumpgridresult' plot(   x,   power.definition = NULL,   var.vary = NULL,   color = \"MTP\",   lines = TRUE,   include.title = FALSE,   ... )"},{"path":"/reference/plot.pumpgridresult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a pumpgridresult object (result function) — plot.pumpgridresult","text":"x pumpgridresult object. power.definition string; definition power plot. NULL, plot definitions facet wrap. var.vary string; variable vary X axis. NULL, one thing varies, default single varying parameter. color string; Group lines element make interaction plot (default \"MTP\", giving one curve MTP). lines logical; TRUE means connect dots lines plots. FALSE means lines. include.title logical; whether include/exclude title (planning facet wrap, example). ... additional parameters.","code":""},{"path":"/reference/plot.pumpgridresult.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a pumpgridresult object (result function) — plot.pumpgridresult","text":"plot; ggplot object outcome across parameter values.","code":""},{"path":"/reference/plot.pumpgridresult.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a pumpgridresult object (result function) — plot.pumpgridresult","text":"","code":"g <- pump_power_grid( d_m = \"d3.2_m3ff2rc\", MTP = c( \"HO\", \"BF\" ),  MDES = 0.10, J = seq(5, 10, 1), M = 5, K = 7, nbar = 58,  Tbar = 0.50, alpha = 0.15, numCovar.1 = 1,  numCovar.2 = 1, R2.1 = 0.1, R2.2 = 0.7,  ICC.2 = 0.25, ICC.3 = 0.25, rho = 0.4, tnum = 200) plot(g, power.definition = 'min1')"},{"path":"/reference/plot.pumpgridresult.mdes.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a grid pump mdes object — plot.pumpgridresult.mdes","title":"Plot a grid pump mdes object — plot.pumpgridresult.mdes","text":"Plot grid pump mdes object","code":""},{"path":"/reference/plot.pumpgridresult.mdes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a grid pump mdes object — plot.pumpgridresult.mdes","text":"","code":"# S3 method for class 'pumpgridresult.mdes' plot(   x,   power.definition = NULL,   var.vary,   color = \"MTP\",   lines = TRUE,   include.title = FALSE,   ... )"},{"path":"/reference/plot.pumpgridresult.mdes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a grid pump mdes object — plot.pumpgridresult.mdes","text":"x pumpgridresult object. power.definition string; definition power plot. NULL, plot definitions facet wrap. var.vary string; variable vary X axis. NULL, one thing varies, default single varying parameter. color string; Group lines element make interaction plot (default \"MTP\", giving one curve MTP). lines logical; TRUE means connect dots lines plots. FALSE means lines. include.title logical; whether include/exclude title (planning facet wrap, example). ... additional parameters.","code":""},{"path":"/reference/plot.pumpgridresult.power.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a pump grid power object — plot.pumpgridresult.power","title":"Plot a pump grid power object — plot.pumpgridresult.power","text":"Plot pump grid power object","code":""},{"path":"/reference/plot.pumpgridresult.power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a pump grid power object — plot.pumpgridresult.power","text":"","code":"# S3 method for class 'pumpgridresult.power' plot(   x,   power.definition = NULL,   var.vary = NULL,   color = \"MTP\",   lines = TRUE,   include.title = FALSE,   ... )"},{"path":"/reference/plot.pumpgridresult.power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a pump grid power object — plot.pumpgridresult.power","text":"x pumpgridresult object. power.definition string; definition power plot. NULL, plot definitions facet wrap. var.vary string; variable vary X axis. NULL, one thing varies, default single varying parameter. color string; Group lines element make interaction plot (default \"MTP\", giving one curve MTP). lines logical; TRUE means connect dots lines plots. FALSE means lines. include.title logical; whether include/exclude title (planning facet wrap, example). ... additional parameters.","code":""},{"path":"/reference/plot.pumpgridresult.power.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a pump grid power object — plot.pumpgridresult.power","text":"Plot; ggplot object","code":""},{"path":"/reference/plot.pumpgridresult.sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a grid pump sample object — plot.pumpgridresult.sample","title":"Plot a grid pump sample object — plot.pumpgridresult.sample","text":"Plot grid pump sample object","code":""},{"path":"/reference/plot.pumpgridresult.sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a grid pump sample object — plot.pumpgridresult.sample","text":"","code":"# S3 method for class 'pumpgridresult.sample' plot(   x,   power.definition = NULL,   var.vary,   color = \"MTP\",   lines = TRUE,   include.title = FALSE,   ... )"},{"path":"/reference/plot.pumpgridresult.sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a grid pump sample object — plot.pumpgridresult.sample","text":"x pumpgridresult object. power.definition string; definition power plot. NULL, plot definitions facet wrap. var.vary string; variable vary X axis. NULL, one thing varies, default single varying parameter. color string; Group lines element make interaction plot (default \"MTP\", giving one curve MTP). lines logical; TRUE means connect dots lines plots. FALSE means lines. include.title logical; whether include/exclude title (planning facet wrap, example). ... additional parameters.","code":""},{"path":"/reference/plot.pumpresult.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a pumpresult object (result function) — plot.pumpresult","title":"Plot a pumpresult object (result function) — plot.pumpresult","text":"object returned pump_power(), visualizes   different definitions power across MTPs. object   returned pump_mdes() pump_sample(), plot power curve   function MDES sample size, respectively.  latter call   calculate power passed range low high   generate curve. Several passed parameters apply mdes sample   versions, controlling grid search plot. pump_power, include standard errors uncertainty   calculated power. depend number iterations (tnum)   used simulation.","code":""},{"path":"/reference/plot.pumpresult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a pumpresult object (result function) — plot.pumpresult","text":"","code":"# S3 method for class 'pumpresult' plot(   x,   type = \"power\",   all = TRUE,   low = NULL,   high = NULL,   grid.size = 5,   breaks = grid.size,   include_SE = TRUE,   ... )"},{"path":"/reference/plot.pumpresult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a pumpresult object (result function) — plot.pumpresult","text":"x pumpresult object. type string; \"power\" \"search\". Specifies whether plot default power graph, search path. search path valid MDES SS results. Logical. TRUE, merge search path original search estimated power curve, MDES sample plots. low Low range x-axis curve calculation sample MDES plots.  (Optional.) high High range x-axis curve calculation. (Optional.) grid.size calculating curve sample MDES plot, many grid points? breaks plotting curve sample MDES, put grid points? include_SE Include (approximate) SEs power estimates, naturally calculated. ... additional parameters, , case sample mdes objects, tnum setting number replicates (logical) determining whether include original points estimated curve, include.points  (logical) including points plot .","code":""},{"path":"/reference/plot.pumpresult.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a pumpresult object (result function) — plot.pumpresult","text":"plot; ggplot object power across different   definitions.","code":""},{"path":"/reference/plot.pumpresult.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a pumpresult object (result function) — plot.pumpresult","text":"","code":"pp1 <- pump_power(d_m = \"d2.2_m2rc\", MTP = 'HO',  nbar = 50, J = 20, M = 8, numZero = 5,  MDES = 0.30, Tbar = 0.5, alpha = 0.05, two.tailed = FALSE,  numCovar.1 = 1, numCovar.2 = 1, R2.1 = 0.1, R2.2 = 0.7,  ICC.2 = 0.05, rho = 0.2, tnum = 200)  plot(pp1)   J <- pump_sample(d_m = \"d2.1_m2fc\",    MTP = 'HO', power.definition = 'D1indiv',    typesample = 'J', target.power = 0.6,    nbar = 50, M = 3, MDES = 0.125,    Tbar = 0.5, alpha = 0.05,    numCovar.1 = 1, R2.1 = 0.1, ICC.2 = 0.05,    rho = 0.2, tnum = 500) #> Warning: Number of final iterations (2000) not up to specified tolerance (0.01). #> Warning: Reached maximum iterations without converging on estimate within tolerance. #>  See sample size vignette for suggestions. plot(J)  plot(J, type = \"search\")"},{"path":"/reference/plot_power_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Examine a power curve (result function) — plot_power_curve","title":"Examine a power curve (result function) — plot_power_curve","text":"give plot power vs. MDES sample size. can   useful see quickly power changes function design   parameters. Can useful diagnose relatively flat power curves,   power changes little function MDES sample size, can also   useful gauge convergence went poorly.","code":""},{"path":"/reference/plot_power_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Examine a power curve (result function) — plot_power_curve","text":"","code":"plot_power_curve(   pwr,   plot.points = TRUE,   all = TRUE,   low = NULL,   high = NULL,   grid.size = 5,   tnum = 2000,   breaks = grid.size,   fit = NULL )"},{"path":"/reference/plot_power_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Examine a power curve (result function) — plot_power_curve","text":"pwr pumpresult object data.frame; result calling pump_sample pump_mdes (data frame , e.g., power_curve()). plot.points logical; whether plot individually tested points curve. logical; TRUE, merge search path original search. low scalar; low range curve. high scalar; high range curve. grid.size scalar; number points calculate power . tnum scalar; number iterations calculate power grid point. breaks scalar; desired number tick marks axes. fit four parameter bounded logistic curve (NULL fit one passed points).","code":""},{"path":"/reference/plot_power_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Examine a power curve (result function) — plot_power_curve","text":"plot; ggplot object power across values.","code":""},{"path":"/reference/plot_power_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Examine search path of a power search (result function) — plot_power_search","title":"Examine search path of a power search (result function) — plot_power_search","text":"give triple-plots search narrowed final estimate.  Can useful gauge convergence went poorly.","code":""},{"path":"/reference/plot_power_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Examine search path of a power search (result function) — plot_power_search","text":"","code":"plot_power_search(pwr, fit = NULL, target.line = NULL)"},{"path":"/reference/plot_power_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Examine search path of a power search (result function) — plot_power_search","text":"pwr pumpresult object; result pump_sample pump_mdes call. fit fitted curve search. target.line scalar; non-NULL, add reference line true power (known, e.g., pump_power call).","code":""},{"path":"/reference/plot_power_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Examine search path of a power search (result function) — plot_power_search","text":"plot; ggplot object  (ggpubr arrangement 3 plots, technically)  search path.","code":""},{"path":"/reference/power_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain a power curve for a range of sample size or MDES values — power_curve","title":"Obtain a power curve for a range of sample size or MDES values — power_curve","text":"used see power changes function   sample size MDES.  takes fit pumpresult calculates power   curve based scenario coupled passed range   values make curve .","code":""},{"path":"/reference/power_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain a power curve for a range of sample size or MDES values — power_curve","text":"","code":"power_curve(   x,   all = FALSE,   low = NULL,   high = NULL,   grid.size = 5,   tnum = 2000 )"},{"path":"/reference/power_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain a power curve for a range of sample size or MDES values — power_curve","text":"x pumpresult object. logical; TRUE, merge search path original search. low scalar; low range curve. high scalar; high range curve. grid.size scalar; number points calculate power . tnum scalar; number iterations calculate power grid point.","code":""},{"path":"/reference/power_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain a power curve for a range of sample size or MDES values — power_curve","text":"data.frame power results.","code":""},{"path":"/reference/print_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Print context (design, model, parameter values) of pumpresult or pumpgridresult (result function) — print_context","title":"Print context (design, model, parameter values) of pumpresult or pumpgridresult (result function) — print_context","text":"Print context (design model, parameter values) given pump result pump grid result object. \"***\" denotes varying values printout.","code":""},{"path":"/reference/print_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print context (design, model, parameter values) of pumpresult or pumpgridresult (result function) — print_context","text":"","code":"print_context(   x,   insert_results = FALSE,   insert_control = FALSE,   include_SE = TRUE,   ... )"},{"path":"/reference/print_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print context (design, model, parameter values) of pumpresult or pumpgridresult (result function) — print_context","text":"x pumpresult object pumpgridresult object. insert_results Include actual results printout. insert_control Include optimizer control parameter information. include_SE Include standard errors printout. ... Extra arguments pass print.pumpresult.","code":""},{"path":"/reference/print_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print context (design, model, parameter values) of pumpresult or pumpgridresult (result function) — print_context","text":"return value; prints results.","code":""},{"path":"/reference/print_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the search history of a pump result object (result function) — print_search","title":"Print the search history of a pump result object (result function) — print_search","text":"pump_mdes pump_sample, print (abbreviated) search history.","code":""},{"path":"/reference/print_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the search history of a pump result object (result function) — print_search","text":"","code":"print_search(x, n = 10)"},{"path":"/reference/print_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the search history of a pump result object (result function) — print_search","text":"x pumpresult object (except .pumpresult, generic object check). n Number lines search path print, max.","code":""},{"path":"/reference/print_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the search history of a pump result object (result function) — print_search","text":"return value; prints results.","code":""},{"path":"/reference/pump_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Provides details about supported package features (core function) — pump_info","title":"Provides details about supported package features (core function) — pump_info","text":"List user options: designs models (d_m), including parameters relevant context; multiple testing procedures; types power; design model parameters.","code":""},{"path":"/reference/pump_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provides details about supported package features (core function) — pump_info","text":"","code":"pump_info(   topic = c(\"all\", \"context\", \"adjustment\", \"power\", \"parameters\"),   comment = TRUE )"},{"path":"/reference/pump_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provides details about supported package features (core function) — pump_info","text":"topic string; kind info. One : , context, adjustment, power, parameters. comment logical; prints long description design method.","code":""},{"path":"/reference/pump_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provides details about supported package features (core function) — pump_info","text":"list; list data frames information topic.","code":""},{"path":[]},{"path":"/reference/pump_mdes.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the minimum detectable effect size (MDES) (core function) — pump_mdes","title":"Estimate the minimum detectable effect size (MDES) (core function) — pump_mdes","text":"user chooses context (d_m), MTP, power definition, choices relevant design parameters. functions performs search algorithm, returns MDES value within specified tolerance. list choices specific parameters, see pump_info().","code":""},{"path":"/reference/pump_mdes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the minimum detectable effect size (MDES) (core function) — pump_mdes","text":"","code":"pump_mdes(   d_m,   MTP = NULL,   numZero = NULL,   propZero = NULL,   M = 1,   nbar,   J = 1,   K = 1,   Tbar,   alpha = 0.05,   two.tailed = TRUE,   target.power = 0.8,   power.definition,   tol = 0.02,   numCovar.1 = 0,   numCovar.2 = 0,   numCovar.3 = 0,   R2.1 = 0,   R2.2 = 0,   R2.3 = 0,   ICC.2 = 0,   ICC.3 = 0,   omega.2 = 0,   omega.3 = 0,   rho = NULL,   rho.matrix = NULL,   B = 1000,   max.steps = 20,   tnum = 1000,   start.tnum = round(tnum/10),   final.tnum = 4 * tnum,   parallel.WY.cores = 1,   updateProgress = NULL,   give.optimizer.warnings = FALSE,   verbose = FALSE )"},{"path":"/reference/pump_mdes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the minimum detectable effect size (MDES) (core function) — pump_mdes","text":"d_m string; single context, design model code. See pump_info() list choices. MTP string, vector strings; multiple testing procedure(s). See pump_info() list choices. numZero scalar; additional number outcomes assumed zero. Please provide NumZero + length(MDES) = M, length(MDES) 1. propZero scalar; proportion outcomes assumed zero (alternative specification numZero).  length(MDES) 1 equal (1-propZero)*M. M scalar; number hypothesis tests (outcomes), including zero outcomes. nbar scalar; harmonic mean number level 1 units per level 2 unit (students per school). Note total number level 1 units, instead number level 1 units nested within level 2 unit, total number level 1 units nbar x J x K. J scalar; harmonic mean number level 2 units per level 3 unit (schools per district). Note total number level 2 units, instead number level 2 units nested within level 3 unit, total number level 2 units J x K. K scalar; number level 3 units (districts). Tbar scalar; proportion samples assigned treatment. alpha scalar; family wise error rate (FWER). two.tailed scalar; TRUE/FALSE two-tailed one-tailed power calculation. target.power target power search algorithm. power.definition see pump_info() possible power definitions. tol tolerance target power, defaults 0.01 (1 parameter controls search done: estimated power (checked `final.tnum` iterations) within `tol`, search stops. numCovar.1 scalar; number level 1 (individual) covariates. numCovar.2 scalar; number level 2 (school) covariates. numCovar.3 scalar; number level 3 (district) covariates. R2.1 scalar, vector length M; percent variation explained level 1 covariates outcome. R2.2 scalar, vector length M; percent variation explained level 2 covariates outcome. R2.3 scalar, vector length M; percent variation explained level 3 covariates outcome. ICC.2 scalar, vector length M; level 2 (school) intraclass correlation. ICC.3 scalar, vector length M; level 3 (district) intraclass correlation. omega.2 scalar, vector length M; ratio variance level 2 average impacts variance level 2 random intercepts. omega.3 scalar, vector length M; ratio variance level 3 average impacts variance level 3 random intercepts. rho scalar; assumed correlation pairs test statistics. rho.matrix matrix; alternate specification allowing full matrix correlations test statistics. Must specify either rho rho.matrix, . B scalar; number permutations Westfall-Young procedures. max.steps many steps allowed terminating. tnum max number samples first iteration search algorithm. start.tnum number samples start search (increase step). final.tnum number samples final draw. parallel.WY.cores number cores use parallel processing WY-SD. updateProgress function update progress bar (used PUMP shiny app). give.optimizer.warnings whether return verbose optimizer warnings. verbose TRUE/FALSE; Print diagnostics time, etc.","code":""},{"path":"/reference/pump_mdes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the minimum detectable effect size (MDES) (core function) — pump_mdes","text":"pumpresult object containing MDES results.","code":""},{"path":[]},{"path":"/reference/pump_mdes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the minimum detectable effect size (MDES) (core function) — pump_mdes","text":"","code":"mdes <-  pump_mdes(   d_m = \"d3.1_m3rr2rr\",   MTP = 'HO',   power.definition = 'D1indiv',   target.power = 0.6,   J = 30,   K = 15,   nbar = 50,   M = 3,   Tbar = 0.5, alpha = 0.05,   two.tailed = FALSE,   numCovar.1 = 1, numCovar.2 = 1,   R2.1 = 0.1, R2.2 = 0.1,   ICC.2 = 0.2, ICC.3 = 0.2,   omega.2 = 0.1, omega.3 = 0.1,   rho = 0.5, tnum = 2000)"},{"path":"/reference/pump_mdes_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Run pump_mdes on varying values of parameters (grid function) — pump_mdes_grid","title":"Run pump_mdes on varying values of parameters (grid function) — pump_mdes_grid","text":"See pump_power_grid() details.","code":""},{"path":"/reference/pump_mdes_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run pump_mdes on varying values of parameters (grid function) — pump_mdes_grid","text":"","code":"pump_mdes_grid(   d_m,   MTP = NULL,   M = 1,   target.power = 0.8,   power.definition = NULL,   tol = 0.01,   propZero = NULL,   numZero = NULL,   nbar,   J = 1,   K = 1,   Tbar = 0.5,   alpha = 0.05,   numCovar.1 = NULL,   numCovar.2 = NULL,   numCovar.3 = NULL,   R2.1 = NULL,   R2.2 = NULL,   R2.3 = NULL,   ICC.2 = NULL,   ICC.3 = NULL,   omega.2 = NULL,   omega.3 = NULL,   rho = NULL,   verbose = FALSE,   drop.unique.columns = TRUE,   ... )"},{"path":"/reference/pump_mdes_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run pump_mdes on varying values of parameters (grid function) — pump_mdes_grid","text":"d_m string; single context, design model code. See pump_info() list choices. MTP string, vector strings; multiple testing procedure(s). See pump_info() list choices. M scalar; number hypothesis tests (outcomes), including zero outcomes. target.power target power search algorithm. power.definition see pump_info() possible power definitions. tol tolerance target power, defaults 0.01 (1 parameter controls search done: estimated power (checked `final.tnum` iterations) within `tol`, search stops. propZero scalar; proportion outcomes assumed zero (alternative specification numZero).  length(MDES) 1 equal (1-propZero)*M. numZero scalar; additional number outcomes assumed zero. Please provide NumZero + length(MDES) = M, length(MDES) 1. nbar scalar; harmonic mean number level 1 units per level 2 unit (students per school). Note total number level 1 units, instead number level 1 units nested within level 2 unit, total number level 1 units nbar x J x K. J scalar; harmonic mean number level 2 units per level 3 unit (schools per district). Note total number level 2 units, instead number level 2 units nested within level 3 unit, total number level 2 units J x K. K scalar; number level 3 units (districts). Tbar scalar; proportion samples assigned treatment. alpha scalar; family wise error rate (FWER). numCovar.1 scalar; number level 1 (individual) covariates. numCovar.2 scalar; number level 2 (school) covariates. numCovar.3 scalar; number level 3 (district) covariates. R2.1 scalar, vector length M; percent variation explained level 1 covariates outcome. R2.2 scalar, vector length M; percent variation explained level 2 covariates outcome. R2.3 scalar, vector length M; percent variation explained level 3 covariates outcome. ICC.2 scalar, vector length M; level 2 (school) intraclass correlation. ICC.3 scalar, vector length M; level 3 (district) intraclass correlation. omega.2 scalar, vector length M; ratio variance level 2 average impacts variance level 2 random intercepts. omega.3 scalar, vector length M; ratio variance level 3 average impacts variance level 3 random intercepts. rho scalar; assumed correlation pairs test statistics. verbose TRUE/FALSE; Print diagnostics time, etc. drop.unique.columns logical; drop parameter columns vary across grid. ... extra arguments passed underlying pump_power, pump_sample, pump_mdes functions.","code":""},{"path":"/reference/pump_mdes_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run pump_mdes on varying values of parameters (grid function) — pump_mdes_grid","text":"pumpgridresult object containing MDES results.","code":""},{"path":[]},{"path":"/reference/pump_mdes_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run pump_mdes on varying values of parameters (grid function) — pump_mdes_grid","text":"","code":"g <- pump_mdes_grid(d_m = \"d3.2_m3ff2rc\", MTP = \"HO\",   target.power = c( 0.50, 0.80 ), power.definition = \"D1indiv\",   tol = 0.05, M = 5, J = c( 3, 9 ), K = 7, nbar = 58,   Tbar = 0.50, alpha = 0.15, numCovar.1 = 1, numCovar.2 = 1,   R2.1 = 0.1, R2.2 = 0.7, ICC.2 = 0.05, ICC.3 = 0.9,   rho = 0.4, tnum = 200)"},{"path":"/reference/pump_power.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate power across definitions (core function) — pump_power","title":"Estimate power across definitions (core function) — pump_power","text":"user chooses context (d_m), MTP, MDES,   choices relevant design parameters. functions returns power definitions power   MTP. list choices specific parameters, see   pump_info().","code":""},{"path":"/reference/pump_power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate power across definitions (core function) — pump_power","text":"","code":"pump_power(   d_m,   MTP = NULL,   MDES,   numZero = NULL,   propZero = NULL,   M = 1,   nbar,   J = 1,   K = 1,   Tbar,   alpha = 0.05,   two.tailed = TRUE,   numCovar.1 = 0,   numCovar.2 = 0,   numCovar.3 = 0,   R2.1 = 0,   R2.2 = 0,   R2.3 = 0,   ICC.2 = 0,   ICC.3 = 0,   omega.2 = 0,   omega.3 = 0,   rho = NULL,   rho.matrix = NULL,   tnum = 10000,   B = 1000,   parallel.WY.cores = 1,   drop.zero.outcomes = TRUE,   updateProgress = NULL,   validate.inputs = TRUE,   long.table = FALSE,   verbose = FALSE,   exact.where.possible = TRUE )"},{"path":"/reference/pump_power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate power across definitions (core function) — pump_power","text":"d_m string; single context, design model code. See pump_info() list choices. MTP string, vector strings; multiple testing procedure(s). See pump_info() list choices. MDES scalar vector; desired MDES values outcome. Please provide scalar, vector length M, vector values non-zero outcomes. numZero scalar; additional number outcomes assumed zero. Please provide NumZero + length(MDES) = M, length(MDES) 1. propZero scalar; proportion outcomes assumed zero (alternative specification numZero).  length(MDES) 1 equal (1-propZero)*M. M scalar; number hypothesis tests (outcomes), including zero outcomes. nbar scalar; harmonic mean number level 1 units per level 2 unit (students per school). Note total number level 1 units, instead number level 1 units nested within level 2 unit, total number level 1 units nbar x J x K. J scalar; harmonic mean number level 2 units per level 3 unit (schools per district). Note total number level 2 units, instead number level 2 units nested within level 3 unit, total number level 2 units J x K. K scalar; number level 3 units (districts). Tbar scalar; proportion samples assigned treatment. alpha scalar; family wise error rate (FWER). two.tailed scalar; TRUE/FALSE two-tailed one-tailed power calculation. numCovar.1 scalar; number level 1 (individual) covariates. numCovar.2 scalar; number level 2 (school) covariates. numCovar.3 scalar; number level 3 (district) covariates. R2.1 scalar, vector length M; percent variation explained level 1 covariates outcome. R2.2 scalar, vector length M; percent variation explained level 2 covariates outcome. R2.3 scalar, vector length M; percent variation explained level 3 covariates outcome. ICC.2 scalar, vector length M; level 2 (school) intraclass correlation. ICC.3 scalar, vector length M; level 3 (district) intraclass correlation. omega.2 scalar, vector length M; ratio variance level 2 average impacts variance level 2 random intercepts. omega.3 scalar, vector length M; ratio variance level 3 average impacts variance level 3 random intercepts. rho scalar; assumed correlation pairs test statistics. rho.matrix matrix; alternate specification allowing full matrix correlations test statistics. Must specify either rho rho.matrix, . tnum scalar; number test statistics draw. Increasing tnum increases precision computation time. B scalar; number permutations Westfall-Young procedures. parallel.WY.cores number cores use parallel processing WY-SD. drop.zero.outcomes whether report power results outcomes MDES = 0.  MDES = 0, first outcome dropped. updateProgress function update progress bar (used PUMP shiny app). validate.inputs TRUE/FALSE; whether check whether parameters valid given choice d_m. long.table TRUE table power rows, correction columns, verbose names. See `transpose_power_table`. verbose TRUE/FALSE; Print diagnostics time, etc. exact..possible TRUE/FALSE; whether exact calculations M=1, use simulation.  Default TRUE.","code":""},{"path":"/reference/pump_power.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate power across definitions (core function) — pump_power","text":"pumpresult object containing power results.","code":""},{"path":[]},{"path":"/reference/pump_power.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate power across definitions (core function) — pump_power","text":"","code":"pp <- pump_power(    d_m = \"d3.2_m3ff2rc\",    MTP = 'HO',    nbar = 50,    J = 30,    K = 10,    M = 5,    MDES = 0.125,    Tbar = 0.5, alpha = 0.05,    numCovar.1 = 1, numCovar.2 = 1,    R2.1 = 0.1, R2.2 = 0.1,    ICC.2 = 0.2, ICC.3 = 0.2,    omega.2 = 0, omega.3 = 0.1,    rho = 0.5)"},{"path":"/reference/pump_power_exact.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate power theoretically for M=1 situations — pump_power_exact","title":"Calculate power theoretically for M=1 situations — pump_power_exact","text":"Calculate power theoretically M=1 situations","code":""},{"path":"/reference/pump_power_exact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate power theoretically for M=1 situations — pump_power_exact","text":"","code":"pump_power_exact(MDES, SE, df, alpha, two.tailed)"},{"path":"/reference/pump_power_exact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate power theoretically for M=1 situations — pump_power_exact","text":"MDES MDES (single number) SE Calculated SE estimator df Degrees freedom estimator (often approximated). alpha Alpha planned test. two.tailed TRUE/FALSE  Two- one-sided test?","code":""},{"path":"/reference/pump_power_exact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate power theoretically for M=1 situations — pump_power_exact","text":"Single row Tibble columns power, SE, DF.  MTP   column value \"None\".","code":""},{"path":"/reference/pump_power_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Run pump_power on varying values of parameters (grid function) — pump_power_grid","title":"Run pump_power on varying values of parameters (grid function) — pump_power_grid","text":"extension `pump_power()` take lists   parameter values run `pump_power()` combinations   values. can assume MDES value outcomes due   .  (.e., vector MDES values interpreted   sequence calls pump_power, one MDES value given). parameter parameter list can list, scalar.   cross combinations list.","code":""},{"path":"/reference/pump_power_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run pump_power on varying values of parameters (grid function) — pump_power_grid","text":"","code":"pump_power_grid(   d_m,   MTP = NULL,   MDES,   M = 1,   nbar,   J = 1,   K = 1,   propZero = NULL,   numZero = NULL,   Tbar,   alpha = 0.05,   numCovar.1 = NULL,   numCovar.2 = NULL,   numCovar.3 = NULL,   R2.1 = NULL,   R2.2 = NULL,   R2.3 = NULL,   ICC.2 = NULL,   ICC.3 = NULL,   omega.2 = NULL,   omega.3 = NULL,   rho = NULL,   long.table = FALSE,   verbose = FALSE,   drop.unique.columns = TRUE,   ... )"},{"path":"/reference/pump_power_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run pump_power on varying values of parameters (grid function) — pump_power_grid","text":"d_m string; single context, design model code. See pump_info() list choices. MTP string, vector strings; multiple testing procedure(s). See pump_info() list choices. MDES vector numeric; ** list MDES outcome, rather list MDES explore. value assumed held constant across M outcomes. M scalar; number hypothesis tests (outcomes), including zero outcomes. nbar scalar; harmonic mean number level 1 units per level 2 unit (students per school). Note total number level 1 units, instead number level 1 units nested within level 2 unit, total number level 1 units nbar x J x K. J scalar; harmonic mean number level 2 units per level 3 unit (schools per district). Note total number level 2 units, instead number level 2 units nested within level 3 unit, total number level 2 units J x K. K scalar; number level 3 units (districts). propZero Proportion outcomes 0 impact (used override numZero, one can defined) numZero scalar; additional number outcomes assumed zero. Please provide NumZero + length(MDES) = M, length(MDES) 1. Tbar scalar; proportion samples assigned treatment. alpha scalar; family wise error rate (FWER). numCovar.1 scalar; number level 1 (individual) covariates. numCovar.2 scalar; number level 2 (school) covariates. numCovar.3 scalar; number level 3 (district) covariates. R2.1 scalar, vector length M; percent variation explained level 1 covariates outcome. R2.2 scalar, vector length M; percent variation explained level 2 covariates outcome. R2.3 scalar, vector length M; percent variation explained level 3 covariates outcome. ICC.2 scalar, vector length M; level 2 (school) intraclass correlation. ICC.3 scalar, vector length M; level 3 (district) intraclass correlation. omega.2 scalar, vector length M; ratio variance level 2 average impacts variance level 2 random intercepts. omega.3 scalar, vector length M; ratio variance level 3 average impacts variance level 3 random intercepts. rho scalar; assumed correlation pairs test statistics. long.table TRUE table power rows, correction columns, verbose names. See `transpose_power_table`. verbose logical; TRUE means print text calls processed.  FALSE . drop.unique.columns logical; drop parameter columns vary across grid. ... extra arguments passed underlying pump_power, pump_sample, pump_mdes functions.","code":""},{"path":"/reference/pump_power_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run pump_power on varying values of parameters (grid function) — pump_power_grid","text":"pumpgridresult object containing power results.","code":""},{"path":[]},{"path":"/reference/pump_power_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run pump_power on varying values of parameters (grid function) — pump_power_grid","text":"","code":"g <- pump_power_grid( d_m = \"d3.2_m3ff2rc\", MTP = c( \"HO\", \"BF\" ),  MDES = 0.10, J = seq(5, 10, 1), M = 5, K = 7, nbar = 58,  Tbar = 0.50, alpha = 0.15, numCovar.1 = 1,  numCovar.2 = 1, R2.1 = 0.1, R2.2 = 0.7,  ICC.2 = 0.25, ICC.3 = 0.25, rho = 0.4, tnum = 1000)"},{"path":"/reference/pump_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the required sample size (core function) — pump_sample","title":"Estimate the required sample size (core function) — pump_sample","text":"user chooses context (d_m), MTP, type sample size, MDES, power definition, choices relevant design parameters. functions performs search algorithm, returns sample size value within specified tolerance. list choices specific parameters, see pump_info().","code":""},{"path":"/reference/pump_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the required sample size (core function) — pump_sample","text":"","code":"pump_sample(   d_m,   MTP = NULL,   typesample,   MDES,   M = 1,   numZero = NULL,   nbar = NULL,   J = NULL,   K = NULL,   target.power,   power.definition,   alpha,   two.tailed = TRUE,   Tbar,   numCovar.1 = 0,   numCovar.2 = 0,   numCovar.3 = 0,   R2.1 = 0,   R2.2 = 0,   R2.3 = 0,   ICC.2 = 0,   ICC.3 = 0,   rho = NULL,   rho.matrix = NULL,   omega.2 = 0,   omega.3 = 0,   B = 1000,   max.steps = 20,   tnum = 1000,   start.tnum = tnum/10,   final.tnum = 4 * tnum,   parallel.WY.cores = 1,   updateProgress = NULL,   max_sample_size_nbar = 10000,   max_sample_size_JK = 1000,   tol = 0.01,   give.optimizer.warnings = FALSE,   verbose = FALSE )"},{"path":"/reference/pump_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the required sample size (core function) — pump_sample","text":"d_m string; single context, design model code. See pump_info() list choices. MTP string, vector strings; multiple testing procedure(s). See pump_info() list choices. typesample string; type sample size calculate: \"nbar\", \"J\", \"K\". MDES scalar vector; desired MDES values outcome. Please provide scalar, vector length M, vector values non-zero outcomes. M scalar; number hypothesis tests (outcomes), including zero outcomes. numZero scalar; additional number outcomes assumed zero. Please provide NumZero + length(MDES) = M, length(MDES) 1. nbar scalar; harmonic mean number level 1 units per level 2 unit (students per school). Note total number level 1 units, instead number level 1 units nested within level 2 unit, total number level 1 units nbar x J x K. J scalar; harmonic mean number level 2 units per level 3 unit (schools per district). Note total number level 2 units, instead number level 2 units nested within level 3 unit, total number level 2 units J x K. K scalar; number level 3 units (districts). target.power target power search algorithm. power.definition see pump_info() possible power definitions. alpha scalar; family wise error rate (FWER). two.tailed scalar; TRUE/FALSE two-tailed one-tailed power calculation. Tbar scalar; proportion samples assigned treatment. numCovar.1 scalar; number level 1 (individual) covariates. numCovar.2 scalar; number level 2 (school) covariates. numCovar.3 scalar; number level 3 (district) covariates. R2.1 scalar, vector length M; percent variation explained level 1 covariates outcome. R2.2 scalar, vector length M; percent variation explained level 2 covariates outcome. R2.3 scalar, vector length M; percent variation explained level 3 covariates outcome. ICC.2 scalar, vector length M; level 2 (school) intraclass correlation. ICC.3 scalar, vector length M; level 3 (district) intraclass correlation. rho scalar; assumed correlation pairs test statistics. rho.matrix matrix; alternate specification allowing full matrix correlations test statistics. Must specify either rho rho.matrix, . omega.2 scalar, vector length M; ratio variance level 2 average impacts variance level 2 random intercepts. omega.3 scalar, vector length M; ratio variance level 3 average impacts variance level 3 random intercepts. B scalar; number permutations Westfall-Young procedures. max.steps many steps allowed terminating. tnum max number samples first iteration search algorithm. start.tnum number samples start search (increase step). final.tnum number samples final draw. parallel.WY.cores number cores use parallel processing WY-SD. updateProgress function update progress bar (used PUMP shiny app). max_sample_size_nbar scalar; default upper bound nbar search algorithm. max_sample_size_JK scalar; default upper bound J K search algorithm. tol tolerance target power, defaults 0.01 (1 parameter controls search done: estimated power (checked `final.tnum` iterations) within `tol`, search stops. give.optimizer.warnings whether return verbose optimizer warnings. verbose TRUE/FALSE; Print diagnostics time, etc.","code":""},{"path":"/reference/pump_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the required sample size (core function) — pump_sample","text":"pumpresult object containing sample size results.","code":""},{"path":[]},{"path":"/reference/pump_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the required sample size (core function) — pump_sample","text":"","code":"J <- pump_sample(   d_m = 'd2.1_m2fc',   MTP = 'HO',   power.definition = 'D1indiv',   typesample = 'J',   target.power = 0.8,   nbar = 50,   M = 3,   MDES = 0.125,   Tbar = 0.5, alpha = 0.05,   numCovar.1 = 1,   R2.1 = 0.1, ICC.2 = 0.05, rho = 0.2,   tnum = 1000)"},{"path":"/reference/pump_sample_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Run pump_sample on varying values of parameters (grid function) — pump_sample_grid","title":"Run pump_sample on varying values of parameters (grid function) — pump_sample_grid","text":"See pump_power_grid() details.","code":""},{"path":"/reference/pump_sample_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run pump_sample on varying values of parameters (grid function) — pump_sample_grid","text":"","code":"pump_sample_grid(   d_m,   MTP = NULL,   M = 1,   target.power,   power.definition,   tol = 0.01,   MDES = NULL,   propZero = NULL,   numZero = NULL,   typesample,   nbar = NULL,   J = NULL,   K = NULL,   Tbar,   alpha,   numCovar.1 = NULL,   numCovar.2 = NULL,   numCovar.3 = NULL,   R2.1 = NULL,   R2.2 = NULL,   R2.3 = NULL,   ICC.2 = NULL,   ICC.3 = NULL,   omega.2 = NULL,   omega.3 = NULL,   rho = NULL,   verbose = FALSE,   drop.unique.columns = TRUE,   ... )"},{"path":"/reference/pump_sample_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run pump_sample on varying values of parameters (grid function) — pump_sample_grid","text":"d_m string; single context, design model code. See pump_info() list choices. MTP string, vector strings; multiple testing procedure(s). See pump_info() list choices. M scalar; number hypothesis tests (outcomes), including zero outcomes. target.power target power search algorithm. power.definition see pump_info() possible power definitions. tol tolerance target power, defaults 0.01 (1 parameter controls search done: estimated power (checked `final.tnum` iterations) within `tol`, search stops. MDES scalar vector; desired MDES values outcome. Please provide scalar, vector length M, vector values non-zero outcomes. propZero Proportion outcomes 0 impact (used override numZero, one can defined) numZero scalar; additional number outcomes assumed zero. Please provide NumZero + length(MDES) = M, length(MDES) 1. typesample string; type sample size calculate: \"nbar\", \"J\", \"K\". nbar scalar; harmonic mean number level 1 units per level 2 unit (students per school). Note total number level 1 units, instead number level 1 units nested within level 2 unit, total number level 1 units nbar x J x K. J scalar; harmonic mean number level 2 units per level 3 unit (schools per district). Note total number level 2 units, instead number level 2 units nested within level 3 unit, total number level 2 units J x K. K scalar; number level 3 units (districts). Tbar scalar; proportion samples assigned treatment. alpha scalar; family wise error rate (FWER). numCovar.1 scalar; number level 1 (individual) covariates. numCovar.2 scalar; number level 2 (school) covariates. numCovar.3 scalar; number level 3 (district) covariates. R2.1 scalar, vector length M; percent variation explained level 1 covariates outcome. R2.2 scalar, vector length M; percent variation explained level 2 covariates outcome. R2.3 scalar, vector length M; percent variation explained level 3 covariates outcome. ICC.2 scalar, vector length M; level 2 (school) intraclass correlation. ICC.3 scalar, vector length M; level 3 (district) intraclass correlation. omega.2 scalar, vector length M; ratio variance level 2 average impacts variance level 2 random intercepts. omega.3 scalar, vector length M; ratio variance level 3 average impacts variance level 3 random intercepts. rho scalar; assumed correlation pairs test statistics. verbose TRUE/FALSE; Print diagnostics time, etc. drop.unique.columns logical; drop parameter columns vary across grid. ... extra arguments passed underlying pump_power, pump_sample, pump_mdes functions.","code":""},{"path":"/reference/pump_sample_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run pump_sample on varying values of parameters (grid function) — pump_sample_grid","text":"pumpgridresult object containing sample results.","code":""},{"path":[]},{"path":"/reference/pump_sample_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run pump_sample on varying values of parameters (grid function) — pump_sample_grid","text":"","code":"g <- pump_sample_grid(d_m = \"d3.2_m3ff2rc\", typesample = \"J\",   MTP = \"HO\", MDES = 0.10, target.power = c( 0.50, 0.80 ),   power.definition = \"min1\", tol = 0.03,   M = 5, K = 7, nbar = 58, Tbar = 0.50,   alpha = 0.15, numCovar.1 = 1, numCovar.2 = 1,   R2.1 = 0.1, R2.2 = 0.7, ICC.2 = 0.25, ICC.3 = 0.25,   rho = 0.4, tnum = 400)"},{"path":"/reference/pump_sample_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculating Needed Sample Size for Raw (Unadjusted) Power — pump_sample_raw","title":"Calculating Needed Sample Size for Raw (Unadjusted) Power — pump_sample_raw","text":"helper function getting needed Sample Size adjustments made test statistics.","code":""},{"path":"/reference/pump_sample_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculating Needed Sample Size for Raw (Unadjusted) Power — pump_sample_raw","text":"","code":"pump_sample_raw(   d_m,   MTP,   typesample,   MDES,   nbar = NULL,   J = NULL,   K = NULL,   target.power,   Tbar,   alpha = 0.05,   two.tailed,   numCovar.1 = 0,   numCovar.2 = 0,   numCovar.3 = 0,   R2.1,   R2.2 = NULL,   R2.3 = NULL,   ICC.2 = NULL,   ICC.3 = NULL,   omega.2 = NULL,   omega.3 = NULL,   max.steps = 100,   warn.small = FALSE )"},{"path":"/reference/pump_sample_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculating Needed Sample Size for Raw (Unadjusted) Power — pump_sample_raw","text":"d_m string; single context, design model code. See pump_info() list choices. MTP string, vector strings; multiple testing procedure(s). See pump_info() list choices. typesample type sample size calculate: J, K, nbar MDES scalar vector; desired MDES values outcome. Please provide scalar, vector length M, vector values non-zero outcomes. nbar scalar; harmonic mean number level 1 units per level 2 unit (students per school). Note total number level 1 units, instead number level 1 units nested within level 2 unit, total number level 1 units nbar x J x K. J scalar; harmonic mean number level 2 units per level 3 unit (schools per district). Note total number level 2 units, instead number level 2 units nested within level 3 unit, total number level 2 units J x K. K scalar; number level 3 units (districts). target.power target power arrive Tbar scalar; proportion samples assigned treatment. alpha scalar; family wise error rate (FWER). two.tailed scalar; TRUE/FALSE two-tailed one-tailed power calculation. numCovar.1 scalar; number level 1 (individual) covariates. numCovar.2 scalar; number level 2 (school) covariates. numCovar.3 scalar; number level 3 (district) covariates. R2.1 scalar, vector length M; percent variation explained level 1 covariates outcome. R2.2 scalar, vector length M; percent variation explained level 2 covariates outcome. R2.3 scalar, vector length M; percent variation explained level 3 covariates outcome. ICC.2 scalar, vector length M; level 2 (school) intraclass correlation. ICC.3 scalar, vector length M; level 3 (district) intraclass correlation. omega.2 scalar, vector length M; ratio variance level 2 average impacts variance level 2 random intercepts. omega.3 scalar, vector length M; ratio variance level 3 average impacts variance level 3 random intercepts. max.steps many steps allowed terminating warn.small Warn degrees freedom issues causing inability achieve target power sample size.","code":""},{"path":"/reference/pump_sample_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculating Needed Sample Size for Raw (Unadjusted) Power — pump_sample_raw","text":"Requisite sample size (integer) associated degrees freedom.","code":""},{"path":"/reference/pump_sample_raw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculating Needed Sample Size for Raw (Unadjusted) Power — pump_sample_raw","text":"single, individual outcome.  takes scalar values arguments, M argument (number outcomes). requires iteration know degrees freedom, guess calculate sample size, recalculate df based sample size, converge. possible returned sample size minimum sample size required least 1 degree freedom (even provides higher target level power).","code":""},{"path":"/reference/pumpgridresult.html","id":null,"dir":"Reference","previous_headings":"","what":"Result object for results of grid power calculations — pumpgridresult","title":"Result object for results of grid power calculations — pumpgridresult","text":"pumpgridresult object S3 class holds results `pump_power_grid()`, `pump_sample_grid()`, `pump_mdes_grid()`. several methods pull different information object, printing methods getting nicely formatted results.","code":""},{"path":"/reference/pumpgridresult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Result object for results of grid power calculations — pumpgridresult","text":"","code":"is.pumpgridresult(x)  # S3 method for class 'pumpgridresult' print(x, header = TRUE, include_SE = FALSE, ...)  # S3 method for class 'pumpgridresult' summary(object, include_SE = FALSE, ...)"},{"path":"/reference/pumpgridresult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Result object for results of grid power calculations — pumpgridresult","text":"x pumpgridresult object (except .pumpgridresult, generic object check). header logical; FALSE means skip header info result, just print data.frame actual results. include_SE logical; TRUE means include standard errors df. ... extra options passed print.pumpgridresult object object summarize.","code":""},{"path":"/reference/pumpgridresult.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Result object for results of grid power calculations — pumpgridresult","text":".pumpgridresult: TRUE object pumpgridresult object. print: return value; prints results. summary: return value; prints results.","code":""},{"path":"/reference/pumpresult.html","id":null,"dir":"Reference","previous_headings":"","what":"pumpresult object for results of power calculations — pumpresult","title":"pumpresult object for results of power calculations — pumpresult","text":"pumpresult object S3 class holds results `pump_power()`, `pump_sample()`, `pump_mdes()`. several methods pull different information object, printing methods getting nicely formatted results. Pump result objects also data.frames, can easily manipulated combined.  return values `grid` functions just return data frames general. Returns whether call power, mdes, sample. Calls print_context method results control set TRUE.","code":""},{"path":"/reference/pumpresult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pumpresult object for results of power calculations — pumpresult","text":"","code":"params(x, ...)  d_m(x, ...)  design(x, ...)  search_path(x, ...)  pump_type(x)  is.pumpresult(x)  # S3 method for class 'pumpresult' x[...]  # S3 method for class 'pumpresult' x[[...]]  # S3 method for class 'pumpresult' dim(x, ...)  # S3 method for class 'pumpresult' summary(object, ...)  # S3 method for class 'pumpresult' print(x, n = 10, header = TRUE, search = FALSE, include_SE = TRUE, ...)  # S3 method for class 'pumpresult' as.data.frame(x, row.names = NULL, optional = FALSE, ...)"},{"path":"/reference/pumpresult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pumpresult object for results of power calculations — pumpresult","text":"x pumpresult object (except .pumpresult, generic object check). ... additional arguments passed .data.frame.list methods. object Object summarize. n Number lines search path print, max. header FALSE means skip header info result, just print data.frame actual results. search FALSE means print search path result mdes sample. include_SE TRUE means include standard errors given design () printout.  Default TRUE. row.names NULL character vector giving row names data frame. optional logical. TRUE, setting row names converting column names optional.","code":""},{"path":"/reference/pumpresult.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pumpresult object for results of power calculations — pumpresult","text":"params: List design parameters used. d_m: Context (d_m) used (string). design (randomization levels) string. search_path: Dataframe describing search path, saved pumpresult object. pump_type: power, mdes, sample, string. .pumpresult: TRUE object pumpresult object. `[`: pull rows columns dataframe. `[[`: pull single element dataframe. dim: Dimension pumpresult (matrix) summary: return value; prints results. print: return value; prints results. .data.frame: pumpresult object clean dataframe (attributes pumpresult).","code":""},{"path":[]},{"path":"/reference/pumpresult.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"pumpresult object for results of power calculations — pumpresult","text":"","code":"pp <- pump_power(d_m = \"d3.2_m3ff2rc\",   MTP = 'HO', nbar = 50, J = 30, K = 10,   M = 5, MDES = 0.125, Tbar = 0.5, alpha = 0.05,   numCovar.1 = 1, numCovar.2 = 1,   R2.1 = 0.1, R2.2 = 0.1, ICC.2 = 0.2, ICC.3 = 0.2,   omega.2 = 0, omega.3 = 0.1, rho = 0.5, tnum = 1000)    print(pp) #> power result: d3.2_m3ff2rc d_m with 5 outcomes #>   MTP    D1indiv    D2indiv    D3indiv    D4indiv    D5indiv indiv.mean  min1 #>  None      0.694      0.702      0.738      0.713      0.715      0.712       #>    SE ( 0.050 )  ( 0.050 )  ( 0.050 )  ( 0.050 )  ( 0.050 )                   #>    HO      0.550      0.551      0.555      0.567      0.552      0.555 0.807 #>   min2  min3  min4 complete df1 #>                             279 #>                                 #>  0.657 0.542 0.436    0.379     #> \t0.005 <= MCSE <= 0.008 params(pp) #> $MTP #> [1] \"HO\" #>  #> $MDES #> [1] 0.125 0.125 0.125 0.125 0.125 #>  #> $numZero #> NULL #>  #> $M #> [1] 5 #>  #> $J #> [1] 30 #>  #> $K #> [1] 10 #>  #> $nbar #> [1] 50 #>  #> $Tbar #> [1] 0.5 #>  #> $alpha #> [1] 0.05 #>  #> $two.tailed #> [1] TRUE #>  #> $numCovar.1 #> [1] 1 #>  #> $numCovar.2 #> [1] 1 #>  #> $numCovar.3 #> [1] 0 #>  #> $R2.1 #> [1] 0.1 0.1 0.1 0.1 0.1 #>  #> $R2.2 #> [1] 0.1 0.1 0.1 0.1 0.1 #>  #> $R2.3 #> [1] 0 0 0 0 0 #>  #> $ICC.2 #> [1] 0.2 0.2 0.2 0.2 0.2 #>  #> $ICC.3 #> [1] 0.2 0.2 0.2 0.2 0.2 #>  #> $omega.2 #> [1] 0 0 0 0 0 #>  #> $omega.3 #> [1] 0.1 0.1 0.1 0.1 0.1 #>  #> $rho #> [1] 0.5 #>  #> $rho.matrix #> NULL #>  #> $B #> [1] 1000 #>  #> $tnum #> [1] 1000 #>  #> $d_m #> [1] \"d3.2_m3ff2rc\" #>  print_context(pp) #> power result: d3.2_m3ff2rc d_m with 5 outcomes #>  #>   MDES vector: 0.125, 0.125, 0.125, 0.125, 0.125 #>   nbar: 50\tJ: 30\tK: 10\tTbar: 0.5 #>   alpha: 0.05\t #>   Level: #>     1: R2: 0.1 (1 covariate) #>     2: R2: 0.1 (1 covariate)\tICC: 0.2\tomega: 0 #>     3:   fixed effects  \tICC: 0.2\tomega: 0.1 #>   rho = 0.5 d_m(pp) #> [1] \"d3.2_m3ff2rc\" pump_type(pp) #> [1] \"power\" is.pumpresult(pp) #> [1] TRUE as.data.frame(pp) #>    MTP D1indiv D2indiv D3indiv D4indiv D5indiv indiv.mean  min1  min2  min3 #> 1 None   0.694   0.702   0.738   0.713   0.715     0.7124    NA    NA    NA #> 2   HO   0.550   0.551   0.555   0.567   0.552     0.5550 0.807 0.657 0.542 #>    min4 complete        SE1        SE2        SE3        SE4        SE5 df1 #> 1    NA       NA 0.05043808 0.05043808 0.05043808 0.05043808 0.05043808 279 #> 2 0.436    0.379         NA         NA         NA         NA         NA  NA dim(pp) #> [1]  2 18 summary(pp) #> power result: d3.2_m3ff2rc d_m with 5 outcomes #>  #>   MDES vector: 0.125, 0.125, 0.125, 0.125, 0.125 #>   nbar: 50\tJ: 30\tK: 10\tTbar: 0.5 #>   alpha: 0.05\t #>   Level: #>     1: R2: 0.1 (1 covariate) #>     2: R2: 0.1 (1 covariate)\tICC: 0.2\tomega: 0 #>     3:   fixed effects  \tICC: 0.2\tomega: 0.1 #>   rho = 0.5 #>   MTP    D1indiv    D2indiv    D3indiv    D4indiv    D5indiv indiv.mean  min1 #>  None      0.694      0.702      0.738      0.713      0.715      0.712       #>    SE ( 0.050 )  ( 0.050 )  ( 0.050 )  ( 0.050 )  ( 0.050 )                   #>    HO      0.550      0.551      0.555      0.567      0.552      0.555 0.807 #>   min2  min3  min4 complete df1 #>                             279 #>                                 #>  0.657 0.542 0.436    0.379     #> \t0.005 <= MCSE <= 0.008 #> \t(tnum = 1000) transpose_power_table(pp) #> power result: d3.2_m3ff2rc d_m with 5 outcomes #>                 power  None    HO #>  individual outcome 1 0.694 0.550 #>                    SE (  )        #>  individual outcome 2 0.702 0.551 #>  individual outcome 3 0.738 0.555 #>  individual outcome 4 0.713 0.567 #>  individual outcome 5 0.715 0.552 #>       mean individual 0.712 0.555 #>             1-minimum       0.807 #>             2-minimum       0.657 #>             3-minimum       0.542 #>             4-minimum       0.436 #>              complete       0.379 #> \t0.005 <= MCSE <= 0.008  J <- pump_sample(d_m = \"d2.1_m2fc\",   MTP = 'HO', power.definition = 'D1indiv',   typesample = 'J', target.power = 0.7,   nbar = 50, M = 3, MDES = 0.125,   Tbar = 0.5, alpha = 0.05, numCovar.1 = 1,   R2.1 = 0.1, ICC.2 = 0.05, rho = 0.2, tnum = 1000)    search_path(J) #>    step MTP target.power       pt         dx    w     power       delta #> 1     0  HO          0.7 27.00000         NA  100 0.6000000 -0.10000000 #> 2     0  HO          0.7 29.35261         NA  100 0.6100000 -0.09000000 #> 3     0  HO          0.7 31.80348         NA  100 0.7200000  0.02000000 #> 4     0  HO          0.7 34.35261         NA  100 0.7600000  0.06000000 #> 5     0  HO          0.7 37.00000         NA  100 0.8500000  0.15000000 #> 6     1  HO          0.7 31.96015 0.02845129  110 0.6000000 -0.10000000 #> 7     2  HO          0.7 33.10667 0.04118361  121 0.7272727  0.02727273 #> 8     3  HO          0.7 32.84062 0.04189974  133 0.6842105 -0.01578947 #> 9     4  HO          0.7 32.93989 0.04237974  146 0.7328767  0.03287671 #> 10    5  HO          0.7 32.77115 0.04273019  161 0.6645963 -0.03540373 #> 11    6  HO          0.7 32.92223 0.04430372  177 0.7401130  0.04011299 #> 12    7  HO          0.7 32.77356 0.04493267  195 0.7589744  0.05897436 #> 13    8  HO          0.7 32.57876 0.04375818 1000 0.7100000  0.01000000 #> 14    9  HO          0.7 32.51694 0.04231497 1000 0.7160000  0.01600000 #> 15   10  HO          0.7 32.43206 0.04015613 1000 0.6900000 -0.01000000 #> 16   11  HO          0.7 32.47802 0.04176746  287 0.7317073  0.03170732 #> 17   12  HO          0.7 32.39186 0.03508176  316 0.7120253  0.01202532 #> 18   13  HO          0.7 32.36125 0.03441224  348 0.7155172  0.01551724 #> 19   14  HO          0.7 32.13187 0.02219274  383 0.7650131  0.06501305 #> 20   15  HO          0.7 32.08622 0.02766443  421 0.7173397  0.01733967 #> 21   16  HO          0.7 31.88810 0.02205884 1000 0.6890000 -0.01100000 #> 22   17  HO          0.7 32.06172 0.02737484  509 0.7308448  0.03084479 #> 23   18  HO          0.7 31.95504 0.02555561  560 0.7107143  0.01071429 #> 24   19  HO          0.7 31.91377 0.02484937 1000 0.7190000  0.01900000 #> 25   20  HO          0.7 31.81727 0.02333786 1000 0.6960000 -0.00400000 #> 26   20  HO          0.7 31.81727 0.02333786 4000 0.7050000  0.00500000 power_curve(J)    #>   step       pt    w MTP target.power  power #> 1    0 27.00000 2000  HO          0.7 0.6265 #> 2    0 30.94638 2000  HO          0.7 0.6915 #> 3    0 35.16185 2000  HO          0.7 0.7395 #> 4    0 39.64638 2000  HO          0.7 0.8035 #> 5    0 44.40000 2000  HO          0.7 0.8655"},{"path":"/reference/run_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Run grid across any of the core pump functions — run_grid","title":"Run grid across any of the core pump functions — run_grid","text":"Run grid across core pump functions","code":""},{"path":"/reference/run_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run grid across any of the core pump functions — run_grid","text":"","code":"run_grid(   args,   pum_function,   verbose = FALSE,   drop.unique.columns,   ...,   use.furrr = FALSE )"},{"path":"/reference/run_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run grid across any of the core pump functions — run_grid","text":"args list scenario arguments pum_function pump_mdes, pump_sample, pump_power verbose print detailed diagnostics drop.unique.columns logical; drop parameter columns vary across grid. ... Extra arguments passed underlying pump_power, pump_sample, pump_mdes functions. use.furrr currently implemented; whether use furr package parallelization","code":""},{"path":"/reference/setup_default_parallel_plan.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup parallel processing — setup_default_parallel_plan","title":"Setup parallel processing — setup_default_parallel_plan","text":"Set furrr use one core","code":""},{"path":"/reference/setup_default_parallel_plan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup parallel processing — setup_default_parallel_plan","text":"","code":"setup_default_parallel_plan()"},{"path":"/reference/strip_SEs.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove SE and df columns from (wide) power table — strip_SEs","title":"Remove SE and df columns from (wide) power table — strip_SEs","text":"used reduce info power table pivoting long format.","code":""},{"path":"/reference/strip_SEs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove SE and df columns from (wide) power table — strip_SEs","text":"","code":"strip_SEs(power_table)"},{"path":"/reference/strip_SEs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove SE and df columns from (wide) power table — strip_SEs","text":"power_table Dataframe (power result object).","code":""},{"path":"/reference/strip_SEs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove SE and df columns from (wide) power table — strip_SEs","text":"Changed dataframe columns starting SE df   dropped.","code":""},{"path":"/reference/transpose_power_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert power table from wide to long (result function) — transpose_power_table","title":"Convert power table from wide to long (result function) — transpose_power_table","text":"Transform table returned pump_power long format table wide format table.","code":""},{"path":"/reference/transpose_power_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert power table from wide to long (result function) — transpose_power_table","text":"","code":"transpose_power_table(power_table, M = NULL)"},{"path":"/reference/transpose_power_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert power table from wide to long (result function) — transpose_power_table","text":"power_table pumpresult object power result (mdes sample). (can also take raw dataframe wide table convert long, internal helper method.) M scalar; set power_table data.frame without set number outcomes. Usually ignore .","code":""},{"path":"/reference/transpose_power_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert power table from wide to long (result function) — transpose_power_table","text":"data.frame power results long format.","code":""},{"path":"/reference/update.pumpgridresult.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a pump grid call, tweaking some parameters (core function) — update.pumpgridresult","title":"Update a pump grid call, tweaking some parameters (core function) — update.pumpgridresult","text":"Works objects returned `update_grid()`; calls   `update_grid()`.","code":""},{"path":"/reference/update.pumpgridresult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a pump grid call, tweaking some parameters (core function) — update.pumpgridresult","text":"","code":"# S3 method for class 'pumpgridresult' update(object, ...)"},{"path":"/reference/update.pumpgridresult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a pump grid call, tweaking some parameters (core function) — update.pumpgridresult","text":"object pumpgridresult object. ... Additional arguments, .e., arguments pass `pump_power()`, `pump_mdes()` `pump_sample()`, replace existing parameters object.","code":""},{"path":[]},{"path":"/reference/update.pumpresult.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a pump call, tweaking some parameters (core function) — update.pumpresult","title":"Update a pump call, tweaking some parameters (core function) — update.pumpresult","text":"Works objects returned pump_power(), pump_mdes(), pump_sample(). One optional parameters can `type = something` argument, \"something\" either \"power\", \"sample\", \"mdes\", call shifted different pump call (pump_power, pump_sample, pump_mdes, respectively).","code":""},{"path":"/reference/update.pumpresult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a pump call, tweaking some parameters (core function) — update.pumpresult","text":"","code":"# S3 method for class 'pumpresult' update(object, type = NULL, ...)"},{"path":"/reference/update.pumpresult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a pump call, tweaking some parameters (core function) — update.pumpresult","text":"object pump result object. type string; can \"power\", \"mdes\" \"sample\", sets type updated call (can different original). ... parameters specified `pump_power`, `pump_mdes`, `pump_sample` overwritten.","code":""},{"path":"/reference/update.pumpresult.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a pump call, tweaking some parameters (core function) — update.pumpresult","text":"pumpresult object: results new call using parameters old object newly specified parameters replaced.","code":""},{"path":"/reference/update.pumpresult.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update a pump call, tweaking some parameters (core function) — update.pumpresult","text":"","code":"ss <- pump_sample( d_m = \"d2.1_m2fc\", MTP = \"HO\",   typesample = \"J\", nbar = 200, power.definition = \"min1\",   M = 5, MDES = 0.05, target.power = 0.5, tol = 0.05,   Tbar = 0.50, alpha = 0.05, numCovar.1 = 5, R2.1 = 0.1,   ICC.2 = 0.15, rho = 0, final.tnum = 1000 )  up <- update(ss, nbar = 40, tnum = 2000 )"},{"path":"/reference/update_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a single pump call to a grid call (grid function) — update_grid","title":"Update a single pump call to a grid call (grid function) — update_grid","text":"Take pumpresult provide lists parameters explore various versions initial scenario.","code":""},{"path":"/reference/update_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a single pump call to a grid call (grid function) — update_grid","text":"","code":"update_grid(x, ...)"},{"path":"/reference/update_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a single pump call to a grid call (grid function) — update_grid","text":"x pump result object. ... list parameters expand grid.","code":""},{"path":"/reference/update_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a single pump call to a grid call (grid function) — update_grid","text":"pumpgridresult object; result calling corresponding grid.","code":""},{"path":"/reference/update_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update a single pump call to a grid call (grid function) — update_grid","text":"","code":"pp <- pump_power(d_m = \"d2.1_m2fc\", MTP = \"HO\",   nbar = 200, J = 20, MDES = 0.2, M = 3,   Tbar = 0.50, alpha = 0.05, numCovar.1 = 5,   R2.1 = 0.1, ICC.2 = 0.05, rho = 0, tnum = 500)  gd <- update_grid( pp, J = c( 10, 20, 30 ) )"},{"path":"/reference/validate_d_m.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate d_m string — validate_d_m","title":"Validate d_m string — validate_d_m","text":"Ensure d_m supported pair design model. d_m just design, select default model. Convert PowerUp! names naming system needed.","code":""},{"path":"/reference/validate_d_m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate d_m string — validate_d_m","text":"","code":"validate_d_m(d_m)"},{"path":"/reference/validate_d_m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate d_m string — validate_d_m","text":"Full d_m string found `pump_info()`","code":""},{"path":"/reference/validate_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Validates user inputs — validate_inputs","title":"Validates user inputs — validate_inputs","text":"functions takes list user inputs. Depending inputs, produces errors warnings, times modifies inputs necessary.","code":""},{"path":"/reference/validate_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validates user inputs — validate_inputs","text":"","code":"validate_inputs(   d_m,   params.list,   power.call = FALSE,   mdes.call = FALSE,   ss.call = FALSE,   verbose = TRUE,   multi.MTP.ok = FALSE )"},{"path":"/reference/validate_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validates user inputs — validate_inputs","text":"d_m single RCT d_m (see list/naming convention) params.list list parameters input user power.call flag power estimation mdes.call flag MDES estimation ss.call flag sample size estimation verbose whether print warnings multi.MTP.ok whether validation allows multiple MTPs","code":""},{"path":"/reference/validate_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validates user inputs — validate_inputs","text":"params.list","code":""}]
